{"type":"data","nodes":[null,{"type":"data","data":[{"glossary":1,"bookmarks":3},{"content":2},"## Pinball Glossary\r\n\r\nThis will be a Pinball glossary, with _only_ the terms that are relevant to Pincrediball.\r\nIt's by no means exhaustive, on purpose.\r\n\r\n### üì¶ Machine Components\r\n\r\n- **Pinball Machines** consist of a main \"**Cabinet**\" with the main **Playfield**, and a **Backbox** with usually a **Display** (which might be a **\"DMD\"** (**Dot-Matrix-Display**)).\r\n- The **Plunger** is the device that sends the ball initially into play from the **Plunger (or \"Shooter\") Lane**.\r\n- **Gates** allow the ball to go through them and register this (e.g. for points).\r\n  They can be \"one-way\", for example at the end of the **Shooter Lane**.\r\n- **Flippers** are the carrot-shaped pieces near the bottom of a Pinball Machine to hit the ball with.\r\n- **Sling Shots** are the triangular shapes that give the ball a speed boost towards the opposite side when hit.\r\n- **Bumpers** will \"bump\" the ball when hit, giving it extra speed.\r\n  Typical types include \"**Mushroom (circular) bumpers**\", and **Rectangular or Pill-shaped bumpers**.\r\n  A \"**Dead**\" or \"**Passive**\" bumper won't give the ball extra speed, but will register a hit (e.g. for points).\r\n- **Drop Targets** are upright pieces that drop down the playfield when hit.\r\n  They're often in groups of three or more, forming a **(Drop Target) \"Bank\"**.\r\n- **Rails** (also \"**Habitrail**\" or \"**Wireform**\") are usually two or four metal wires that guide the ball along a specific path.\r\n- **Kickback** is a launching device often placed in **Outlanes** which (when enabled) \"kicks back\" the ball into play.\r\n- **Lanes** are like car lanes: long paths just wide enough for a ball to roll through.\r\n  **Outlanes** are the lanes on the side of the machine that typically will **Drain** the ball.\r\n- **Orbits** are usually lanes that go from one side, via the top of the playfield, all the way to the other side of the table.\r\n- **Ramps** lead the ball up along the z-axis to an elevated lane or mini-playfield.\r\n- **Rollover** (switches) are flat switches on the playfield that register when a ball rolls over it, perhaps in a specific direction.\r\n- **Gobble Holes** (or \"**Sinkholes**\") swallow up a ball underneath the playfield (with further effects dependent on the specific machine).\r\n- **Popper** (or \"**Vertical Up-Kicker**\") will \"kick\" the ball up along the z-axis, e.g. onto a **Habitrail**.\r\n- **Spinners** are targets that spin rapidly when hit by a ball, racking up points for each spin.\r\n- **Newton's Cradle** is usually a \"**Captive Ball**\", trapped in a small lane, when hit by the active ball will move along the lane for points.\r\n- A **Toy** is any special unique component specific to the theme of a table, with special visual and game or quest effects.\r\n\r\n### üîÄ Game Mechanics\r\n\r\n- **Draining** a ball means it'll roll down to the **Trough** at the bottom, loosing that specific ball from play.\r\n- **Tilting** happens when the machine is physically bumped to nudge the ball a bit.\r\n  Tilting too much usually ends the game by temporarily disabling everything (including **Flippers**) on the machine.\r\n- **Quests** are theme-specific targets to hit in special orders, to achieve bonus scores and multipliers.\r\n- **Modes** are stages of the game where different targets mean different bits of **Quest** progression.\r\n  They often come with changes in scoring for various targets.\r\n- **Skill shots** usually means **Plunging** the ball with just the right amount of force to hit a specific target when the ball initially enters play.\r\n- **Jackpot** is a big bonus for a particular shot, sometimes only available in a specific **mode**, during a stage of a **quest**, or during a **Multi-Ball**.\r\n- **Multi-ball** is a mode where the game enters extra balls (beyond the usual single ball) into play, typically accompanied by bonus scoring for specific targets.\r\n- A **Ball-lock** is when the machine allows \"locking\" the current ball (and providing a fresh active ball),\r\n  so when enough balls are locked a **Multi-ball** may be started.\r\n- **Ball Saver** can refer to a limited time period after **plunging**, in which a **drained** ball will freely be returned into play.\r\n- **Ball Saver** can refer to a specific physical device between and just below the two flippers to bounce the ball back up and \"save\" it from **draining**.\r\n\r\n### üñê Pinball Skills\r\n\r\n- **Dead Bounce** means letting the ball purposely bounce of a flipper that's _not_ being activated, to loosely let it bounce to the other flipper.\r\n- **Death Saves** are tilting the machine slightly when the ball is rolling through an **Outlane** to **Drain**, bumping it back up sneaking it back into play.\r\n- **Live Catch** means activating a flipper to instantly catch the ball in the corner of that flipper.\r\n- **Drop Catch** is similar to a **Live Catch** except you also _release_ the flipper downwards just when the ball hits, to give more control over the ball.\r\n- **Post Pass** transfers the ball from one flipper to the other by bumping it slightly onto the **slingshot corner** to send it over to the other side.\r\n- **Tap Pass** transfers the ball from one flipper to the other by tapping the flipper very lightly.\r\n- **Flick Pass** means _slightly_ and shortly dropping the flipper while the ball is about to roll off it, to \"flick\" it over to the other flipper.\r\n- **Cradling** means holding a ball in a permanently activated flipper.\r\n- **Cradle Separation** is tapping the flipper to move one ball out of multiple (from a **multi-ball**) from the cradle over to the other flipper.\r\n",{"content":4},"## Bookmarks\r\n\r\nA non-exhaustive list of resources that were used while building Pincrediball.\r\n\r\n### üü° Game Store Pages\r\n\r\nIt's not quite there yet, but there will be two most important links, so let's reserve some space for them:\r\n\r\n- To be created: **Pincrediball Steam Store page**.\r\n- To be created: **Pincrediball Itch.io page**.\r\n\r\n### üåç Own content\r\n\r\nA list of links to Pincrediball's stuff (duplicated from [the Contact page](\u002Fcontact)):\r\n\r\n- [Pincrediball.com](https:\u002F\u002Fpincrediball.com)\r\n- [Mastodon account @pincrediball@mastodon.social](https:\u002F\u002Fmastodon.social\u002F@pincrediball)\r\n- [Twitter account @pincrediball](https:\u002F\u002Ftwitter.com\u002Fpincrediball)\r\n- [Subreddit \u002Fr\u002Fpincrediball](https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fpincrediball\u002F)\r\n- [YouTube channel \u002F@pincrediball](https:\u002F\u002Fwww.youtube.com\u002F@pincrediball)\r\n- [GitHub organization \u002Fpincrediball](https:\u002F\u002Fgithub.com\u002Fpincrediball), should anyone be interested in such a thing...\r\n\r\nCreator home page (which further links to all related stuff):\r\n\r\n- [JeroenHeijmans.nl](https:\u002F\u002Fjeroenheijmans.nl)\r\n\r\n### ü§ñ Godot (game engine)\r\n\r\nThe second game engine I tried for Pincrediball, with a list of used resources:\r\n\r\n- Official resources\r\n  - [GodotEngine.org](https:\u002F\u002Fgodotengine.org\u002F): the home page.\r\n  - [Godot Engine - Q&A: Bezier Curves for Collision Shapes](https:\u002F\u002Fgodotengine.org\u002Fqa\u002F23638\u002Fwhy-arent-there-bezier-curves-for-collision-shape-creation)\r\n  - [Godot subreddit - Q&A: Bezier Curves for Collision Shapes](https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fgodot\u002Fcomments\u002Fbbj4sv\u002Fcreating_a_curved_collision_shape_2d\u002F)\r\n- GDQuest, an organization with strong focus on Godot resources\r\n  - [GDQuest.com](https:\u002F\u002Fwww.gdquest.com\u002F) home page\r\n  - [YouTube channel @GDQuest](https:\u002F\u002Fwww.youtube.com\u002F@Gdquest)\r\n  - [Godot 4.0 Release - YouTube overview](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=chXAjMQrcZk)\r\n- YouTube tutorials\r\n  - [Godot Area2D Beginner tutorial](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=cQyyD-ykAHU)\r\n  - [Godot 2D Curved Terrain](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=45PldDNCQhw) (with a plugin)\r\n  - [Godot Drag & Drop Inventory System](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=dZYlwmBCziM)\r\n  - [Godot Drag, Drop, and Snap](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=oN_28jlj8j4)\r\n  - [Godot Inventory Tutorial](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=rdUgf6r7w2Q) (and the [related GitHub repository](https:\u002F\u002Fgithub.com\u002Fuheartbeast\u002Finventory-tutorial))\r\n  - [Godot Smooth Drag & Drop](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=iSpWZzL2i1o)\r\n  - [Godot GDScript vs C#](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=zq7lsT-phx8)\r\n  - [5 Reasons _not_ to use Godot](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=zHSr9VETfdE)\r\n  - [10 Reasons to use Godot](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=1t2xKpVyZYg)\r\n- Other stuff\r\n  - [Godot 3.x Pinball Game](https:\u002F\u002Fgithub.com\u002Fdbisdorf\u002Fprofessor-pinball) published under the MIT license (used for learning Godot techniques)\r\n- My own Q&A and other similar posts\r\n  - [\"Equivalent of RigidBody2D's body_exited on StaticBody2D?\"](https:\u002F\u002Fgamedev.stackexchange.com\u002Fq\u002F204774\u002F16701)\r\n  - [\"What's the difference between VBoxContainer and VFlowContainer?\"](https:\u002F\u002Fgamedev.stackexchange.com\u002Fq\u002F204805\u002F16701)\r\n  - [\"Drag and drop differences between Godot 3 and 4?\"](https:\u002F\u002Fgamedev.stackexchange.com\u002Fq\u002F204808\u002F16701)\r\n\r\n### üî´ Phaser (game engine)\r\n\r\nThe first game engine I tried for Pincrediball, here's a list of resources used:\r\n\r\n- Official resources\r\n  - [github.com\u002Fphotonstorm\u002Fphaser3-examples](https:\u002F\u002Fgithub.com\u002Fphotonstorm\u002Fphaser3-examples), the official examples\r\n  - [labs.phaser.io\u002F](http:\u002F\u002Flabs.phaser.io\u002F), in-browser runnable examples\r\n  - [phaser.io\u002Flearn](https:\u002F\u002Fphaser.io\u002Flearn)\r\n  - [Phaser 3 API Documentation (beta)](https:\u002F\u002Fnewdocs.phaser.io\u002Fdocs\u002F3.55.2\u002FPhaser.Game)\r\n  - [Phaser 3 API Documentation (old)](https:\u002F\u002Fphotonstorm.github.io\u002Fphaser3-docs\u002FPhaser.Game.html)\r\n- Box2D Physics\r\n  - [Phaser 2(!!) Box2D Plugin](http:\u002F\u002Fphaser.io\u002Fshop\u002Fplugins\u002Fbox2d), a different physics engine\r\n  - [Phaser 3 Box2D via Planck.js blog post](https:\u002F\u002Fwww.emanueleferonato.com\u002F2019\u002F10\u002F12\u002Fuse-box2d-physics-in-your-phaser-3-projects-with-planck-js-javascript-physics-engine\u002F)\r\n  - [Planck.js (Box2D port) home page](https:\u002F\u002Fpiqnt.com\u002Fplanck.js\u002F)\r\n  - [Planck.js (Box2D port) on GitHub](https:\u002F\u002Fgithub.com\u002Fshakiba\u002Fplanck.js)\r\n- OurCade, an organization with focus on Phaser resources\r\n  - [Ourcade.co](https:\u002F\u002Fourcade.co\u002F) home page\r\n  - [github.com\u002Fourcade](https:\u002F\u002Fgithub.com\u002Fourcade)\r\n  - [YouTube: Phaser 3 Game in TypeScript](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=tFkMxzHwmDw)\r\n  - [YouTube: Phaser 3 vs Kaboom.js](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=g4slFm0lows)\r\n  - [YouTube: Phaser 3, Matter.js, and Entity Component System (playlist)](https:\u002F\u002Fwww.youtube.com\u002Fplaylist?list=PLNwtXgWIx3rh4C4bB8oO2CrJflUkLd3Bn)\r\n  - [YouTube: Phaser 3 and Matter.js Breakout Game tutorial (playlist)](https:\u002F\u002Fwww.youtube.com\u002Fplaylist?list=PLNwtXgWIx3rh23MYaPLgqLDePAQgK1kQN)\r\n- Other resources\r\n  - [YouTube: Phaser 3 with Next.js](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=xRJ787usR5s)\r\n  - [YouTube: Matter.js physics and Mouse Constraints](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=W-ou_sVlTWk)\r\n- My own Q&A and other similar posts\r\n  - [\"How to make object movable only by the player?\"](https:\u002F\u002Fgamedev.stackexchange.com\u002Fq\u002F204691\u002F16701)\r\n\r\n### üõ† Game Development\r\n\r\nGeneric game development resources:\r\n\r\n- [OpenGameArt.org](https:\u002F\u002Fopengameart.org\u002F)\r\n- YouTube\r\n  - [Lightweight comparison of 8 game engines](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=MASAqbRMnaM)\r\n  - [Lightweight comparison of Godot, Unity, and Unreal Engine](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=dphuMHYH_VY)\r\n  - [@AmalieKae devlog playlist](https:\u002F\u002Fwww.youtube.com\u002Fplaylist?list=PL3jzrSFLAusjNpInOVOXT16GNB7aAyyFO) about starting an Indie Game Studio\r\n  - [@Pontypants devlog playlist](https:\u002F\u002Fwww.youtube.com\u002Fplaylist?list=PLQ4Vt6g0IoeN2FAirquiSXtVkMcZYr_Rq) about creating Punch-A-Bunch\r\n  - [The Beauty of Bezier Curves](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=aVwxzDHniEw)\r\n  - [Writing a physics engine from scratch](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=lS_qeBy3aQI)\r\n\r\n### üü£ Pinball Machines\r\n\r\nGeneric resources about Pinball.\r\n\r\n- Glossaries (also used for [Pincrediball's own Glossary](\u002Fresources#glossary))\r\n  - [Glossary on Wikipedia](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FGlossary_of_pinball_terms)\r\n  - [Glossary on \"The Internet Pinball Machine Database\"](https:\u002F\u002Fwww.ipdb.org\u002Fglossary.php)\r\n  - [YouTube glossary with visuals](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=oAvPRYkHQLY)\r\n- YouTube\r\n  - [Pinball Machine in Slow Motion](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Tmg5WOvPKpU) by The Slow Mo Guys\r\n  - [Pinball Flipper Skills (playlist)](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=r_7TQ6wRZdw&list=PL-WQLGFMr97DnxeE1Rmi-wAwa-Vm7D-7i)\r\n  - [Pinball Flipper Skills (short summary)](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=krnjVxe4iN0)\r\n  - [Pinball Machine parts and components](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=2CpUgC-yOFg)\r\n  - [Pinball History (playlist, 4 episodes)](https:\u002F\u002Fwww.youtube.com\u002Fplaylist?list=PLDwfKjKd6r1EXcYTT_Dagl2Hi2fIWbjqT)\r\n  - [Tutorial for the X-Man Pinball Machine](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=EFX2_0nDoMI)\r\n  - [Tutorial for the Addams Family Pinball Machine](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=XSw7fK6x1mw)\r\n  - [Tutorial for the Medieval Madness Pinball Machine](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=6wb_x3q3z14&t=866s)\r\n  - [Pinball Coffee Table build](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=DmYrqO6teW8)\r\n  - [Top 10 Pinball Machines by CaptNRetro](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=5b1a0pagrag)\r\n  - [Top 10 Pinball Machines by WatchMojo](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=tDYmKpHfgtQ)\r\n  - [Vox: Pinball isn't as random as it seems](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=T1zzyGhA4-g)\r\n\r\n### ‚öô Tools used\r\n\r\nIn addition to the game engines above, the following generic tools were used in making Pincrediball and its website:\r\n\r\n- [Svelte](https:\u002F\u002Fsvelte.dev\u002F) and [SvelteKit](https:\u002F\u002Fkit.svelte.dev\u002F), using [TypeScript](https:\u002F\u002Fwww.typescriptlang.org\u002F)\r\n- [TailwindCSS](https:\u002F\u002Ftailwindcss.com\u002F) with the [Typography plugin](https:\u002F\u002Ftailwindcss.com\u002Fdocs\u002Ftypography-plugin)\r\n- The [Inter typeface family](https:\u002F\u002Frsms.me\u002Finter\u002F)\r\n- [Marked.js](https:\u002F\u002Fmarked.js.org\u002F)\r\n- [VSCode](https:\u002F\u002Fcode.visualstudio.com\u002F)\r\n- [MarkdownLint](https:\u002F\u002Fgithub.com\u002FDavidAnson\u002Fvscode-markdownlint)\r\n- [SpellChecker](https:\u002F\u002Fstreetsidesoftware.com\u002Fvscode-spell-checker\u002F)\r\n- [Prettier](https:\u002F\u002Fprettier.io\u002F)\r\n- [GitHub Pages](https:\u002F\u002Fpages.github.com\u002F)\r\n- [ScreenToGif](https:\u002F\u002Fwww.screentogif.com\u002F)\r\n- [Paint .NET](https:\u002F\u002Fwww.getpaint.net\u002F)\r\n- [PicPick](https:\u002F\u002Fpicpick.app\u002F)\r\n- [Figma](https:\u002F\u002Fwww.figma.com\u002F)\r\n"],"uses":{}}]}
