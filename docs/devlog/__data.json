{"type":"data","nodes":[null,{"type":"data","data":[{"postsGroupedByWeek":1,"posts":261},[2,18,51,90,123,162,195,228],{"key":3,"posts":4},"2023, week 28",[5,12],{"id":6,"isDraft":7,"order":8,"date":9,"title":10,"content":11},"post-2023-07-16",false,1,["Date","2023-07-16T00:00:00.000Z"],"Day 106: Game Development Sucks; Developing Games Rocks!","## Day 106: Game Development Sucks; Developing Games Rocks!\n\n**_Jeroen_, July 16, 2023**\n\nI am a web- and mobile app developer by trade.\nDuring an eight week sabbatical I built \"Pincrediball\".\n**I loved developing a game**, but **I _hated_ game development**.\n\nAllow me to explain.\nBut first...\n\n### Welcome new readers!\n\nLong-time readers can skip this section, but if you're new here: welcome!\nThe short of it is that I built a game for the first time, in 8 weeks time.\nAnd you can find it here:\n\n- [Pincrediball on Steam](https://store.steampowered.com/app/2378150/Pincrediball) (Early Access, free, all Operating Systems)\n- [Pincrediball on Itch.io](https://pincrediball.itch.io/pincrediball) (free, but you can tip; browser based)\n- [Pincrediball on GitHub](https://github.com/pincrediball/pincrediball) (the full source code!)\n\nTo get a quick feeling for what this game is about, watch the release trailer:\n\n[![YouTube video thumbnail](/img/2023-03-31-youtube-image.png) Watch on YouTube...](https://www.youtube.com/watch?v=oXBfiG2kagI)\n\nI'm quite proud I managed to design, build, publish, and actually _finish_ the whole thing.\nI also enjoyed most of the road to get here.\nWhy is it then that I say I \"hate\" game development?\n\n### About \"Hating Game Development\"\n\nAgain: **I _loved_ developing a game**.\nIt's just that **I hated game development**.\nThere's a subtle but important difference between the two.\nMy own guess is that the reason has to with the fact that:\n\n- I _did_ have a **lot of _web_ development** experience.\n- I had **zero _game_ development** experience to speak of;\n\nThis is an extremely nasty combination, or so I presume.\nIt puts me top-right in the following table, extended with my take on the other three possibilities:\n\n|                                 | Little WEB Dev Experience                                                                                                                                                                                                                                                                                  | Lots of WEB Dev Experience                                                                                                                                                                                                                                                                          |\n| ------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Little GAME Dev Experience**  | 🤩 **Game Dev is perfect for you!** Most tutorials in Game Development are aimed at your skill level. You'll be amazed at how fast you'll be able to build stuff. And the \"elbow grease\" needed to get a game completed will feel totally normal. You won't miss any of the stuff that I felt was lacking. | 😭 **This was _my_ corner**. Nearly none of the tools and techniques you know and love from creating web API's or front-ends will be available. You'll be struggling to find game dev information on proper CI/CD, automated testing, inversion of control, or tooling and architecture in general. |\n| **Lots of GAME Dev Experience** | 🧙‍♂️ **You're likely a wizard!** You've honed your skill and learned tricks from the industry. Or you may work for a big(ger) studio with in-house tooling to compensate for the lack of industry-wide public knowledge. My blogpost might seem weirdly incorrect or besides-the-point.                      | 🦄 **You're the one I need(ed)!** You can tell me why this devlog is wrong, tell me that there _are_ tools that I just wasn't able to find. Bridge the gap between the wonderful things from Web Development and their equivalents in Game Development.                                             |\n\nIn terms of [the psychological \"Four stages of competence\"](https://en.wikipedia.org/wiki/Four_stages_of_competence)\n(related to the Dunning-Kruger effect) I feel like I am **\"Consciously Incompetent\"** as far as Game Development is concerned.\nBecause I'm still incompetent, I might very well be wrong.\nBut I'd claim:\n\n> Game Development seriously lacks broadly available proper practices and tooling.\n\nHere are come examples of what I found lacking:\n\n- **Continuous Integration and Deployment** knowledge and tooling is nearly non-existent.\n- **Automated testing** is hardly talked about.\n- **Flow of Data** seems to be an afterthought, there's nearly nothing to be found about Unidirectional Data Flow or similar patterns.\n- **Architecture and Best Practices** are seemingly left to each individual developer, with only adhoc advice here and there.\n- **Et cetera...** See the [Day 42 blog post](#post-2023-03-26) for more details and extra examples.\n\nNow consider .NET Core, Laravel, SvelteKit, NextJS, or a dozen other web development frameworks.\nEach of those has amazing and extensive documentation and great starter templates, to create robust and future proof code.\nComparing that to the PhaserJS and Godot situation, I found things seriously lacking.\nI hear similar stories from friends and colleagues working with Unity or Unreal Engine.\n\nMind you, there is _some_ information on the above topics.\nAnd I appreciate the creators of that content all the more!\nBut relative to web development eco-systems, information is either hard to find or nonexistent.\nEspecially if you're just starting out.\n\n### About the Godot engine\n\nThe above section spoke in broad terms about Game Development.\nI purposely generalized from my experience with Godot (and PhaserJS).\nAnd that feels warranted.\nBased on conversations with folks who did their first work in Unity or Unreal, I reckon it's roughly the same deal there.\n\nThere are a few specific things to say about Godot though.\n\nHowever, it's weird to \"complain\" about a free and Open Source tool.\nSo let me start by saying that **I'm very grateful for the hard work put into Godot**.\nI even [put my money where my mouth was](#post-2023-03-28).\nAnd overall it was actually a pretty decent experience to build something in Godot.\n\nHaving said that, if you're a web developer (like me) coming to game development: be warned!\nThere are several things with Godot that you'll likely also find awkward:\n\n- [**Inheritance is favored over composition**](https://docs.godotengine.org/en/stable/about/faq.html#does-godot-use-an-ecs-entity-component-system)\n- [**Godot rolled their own flavor of Python**](https://docs.godotengine.org/en/stable/about/faq.html#what-were-the-motivations-behind-creating-gdscript)\n- **UI building is powerful but verbose**, and frustrating compared to doing HTML and CSS.\n- **Debugging is hard**, and you'll miss the tools you have in web development.\n- **Open Source interactions can be harsh**, at least for the core Godot stuff.\n\nThis is in addition to the general Game Development gripes I mentioned earlier.\n\nOverall however, I think **Godot is _great_ for developing your first game**.\nIf you're aware of the gotchas, there are also many things to like about Godot.\nIt's easy to pick up, and has a good visual editor.\nYou can compile for several platforms, and the tool is free and open source.\n[The documentation](https://docs.godotengine.org/) is quite good and comprehensive.\n\nAnd the proof is in the end result: **it enabled me to build a full game in a few weeks**!\nSo let's talk a little bit about that \"proof\", shall we?\n\n### Source code\n\nIf you're a Web Developer going into Game Development with Godot,\nyou might also find [the Pincrediball Source](https://github.com/pincrediball/pincrediball) a useful resource.\nDisclaimer: I am by no means a Godot expert.\nHowever, I did try to create as clean and robust code as I could with the tools available.\n\nIf you're going to look through the code, I particularly would recommend looking at:\n\n- My poor-man's implementation of **Unidirectional Data Flow** (e.g. in [the Scoring \"store\"](https://github.com/pincrediball/pincrediball/blob/main/src/game/core/scoring.gd).\n  It has to rely on the singleton pattern, public functions for actions, and events instead of selectors.\n  But it gets the job done: things are highly cohesive but not tightly coupled.\n  It prevents a ton of data being passed around and events bubbling through the inheritance tree.\n- Being forced by Godot to rely on inheritance over composition,\n  I still manage to apply some **Inversion of Control** (e.g. in [the Base Pinball Component](https://github.com/pincrediball/pincrediball/blob/main/src/game/tutorial/component_base.gd)).\n- The code follows [the official Style Guide](https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_styleguide.html) closely\n  and would pass **Linting Tools**... if there would've been any.\n- The general [**Folder Structure**](https://github.com/pincrediball/pincrediball/tree/main/src)\n  has been carefully chosen, despite the lack of good guidance available online.\n  It should work well for small and medium sized games; it won't hold up for larger projects though.\n\nBut I also recommend you only take this as inspiration, and a way to \"not feel alone\" as a web developer in the Godot world.\nDo not take it as a set of best practices or recommendations... remember:\n**I am consciously incompetent**.\n\n### Further reading\n\nPerhaps this post got you interested, and you'd like to cherry pick some further reading.\nFor that case I'll share my **Top 5 Pincrediball Devlog Posts**, the most interesting ones for the general public:\n\n1. [Day 45: Statistics](#post-2023-03-29): effort needed to do a project like this.\n2. [Day 44: Giving back](#post-2023-03-28): some love for the tools I used.\n3. [Day 24: Tutorial Machine](#post-2023-03-08): promising results halfway through are great!\n4. [Day 17: Giving up](#post-2023-03-01): the inevitable solo game development \"crash\".\n5. [Day 01: Gotta start somewhere](#post-2023-02-13): just look at how little is needed to get started!\n\nBut of course if you feel like it you can also scan or read through the entire devlog since [day 1](#post-2023-02-13).\n\n### Final words\n\nTime for some closing remarks about Game Development, and about the project.\n\nI'm happy I took a stab at game development.\nI'm proud that I finished an entire game, and got it published on Itch.io _and_ on Steam.\nIt was fun, and I'll likely do something similar again!\n\nAnd to fully close of, I'll just repeat the post title:\n\n> **Game development sucks. But developing games rocks!**\n",{"id":13,"isDraft":7,"order":14,"date":15,"title":16,"content":17},"post-2023-07-15",2,["Date","2023-07-15T00:00:00.000Z"],"Day 105: Releasing on Steam","## Day 105: Releasing on Steam\n\n**_Jeroen_, July 15, 2023**\n\nMy last post was \"Day 47\" (March 31st).\nSince then 58 days have past.\nMy sabbatical was over and I've been back to work and other hobbies.\nHowever, I did still spend a ton of time on Pincrediball over those weeks.\n\n### Hours needed to get onto Steam\n\nNearly all of that work went towards getting the game onto Steam.\nI was hoping it was only a little more work than publishing on Itch.io.\nBoy, was I _wrong_!!\n\nIn sunk [an estimated 361 hours of work](#post-2023-03-29) into the full game and release on Itch.io.\nIn addition to that **I estimate publishing on Steam cost about another 100 hours or so**.\nThat includes roughly 12 hours of work on creating and coding the Steam Achievements.\n\nThat's _insane_!\n\nThere's two factors to all this.\nFirst, the back office for partners at Steam is... outdated, and not the most user friendly web app in the world.\nYes, that's an understatement.\nSecond, there is just a _ton_ of forms to complete.\nLet's dive into that, shall we?!\n\n### Stuff needed to release on Steam\n\nOfficially the Steam Partner features are under \"Confidential\".\nI'm not actually allowed to share the actual pages of the partner dashboards.\nBut I surely I can get away with giving a broad overview of what's needed to release a game on Steam.\nOr at least what was needed for Pincrediball.\nSo, without further ado...\n\n**Here's a grand overview of all the things _I_ needed to do to release on Steam**:\n\n#### Store and Library settings\n\n- Basic Info\n  - Name, Developer, Publisher, etc.\n  - External links (about 8 options)\n  - Social Media Links (4 hardcoded options)\n  - Search Keywords, comma-separated\n  - Supported Platforms (3 OS'es, both Minimum and Recommended System Requirements)\n  - Release Date\n  - Supported Languages (Interface, Audio, Subtitles)\n  - Number of players supported (a dozen or so checkboxes)\n  - Supported Features (Achievements, Stats, Steam Cloud, etc.; about 16 checkboxes)\n  - Genres (Primary and Secondary)\n  - Tags (at least 5, but up to 20)\n  - Controller support (radio button options)\n  - DRM Info (if any), 3rd Party Accounts info\n  - Legal lines (rich text)\n  - Support Contact Info\n- Description\n  - About This Game (rich text, a few paragraphs at least)\n  - Short Description (one paragraph)\n  - Reviews and Awards from external parties\n- Early Access\n  - \"Why\" section, rich text, at least one paragraph\n  - \"How long\" section, rich text, at least one paragraph\n  - \"Full Version\" section, rich text, at least one paragraph\n  - \"Current State\" section, rich text, at least one paragraph\n  - \"Pricing Info\" section, rich text, at least one paragraph\n  - \"Community feedback\" section, rich text, at least one paragraph\n- Assets\n  - Store assets (5 exactly sized images, plus at least 5 screenshots)\n  - Library assets (4 exactly sized images)\n  - Broadcast assets (1 exactly sized image)\n- Trailer\n  - Full HD H.264 video upload\n  - Thumbnail image\n\n#### Steamworks settings\n\n- Application\n  - Name (yes, again)\n  - Supported Operating Systems (yes, again)\n  - Release date (yes, again)\n- Steam Pipe\n  - Depots (basically ZIP's with your game files, one per OS in my case)\n  - Branch and Builds with Depots to be included\n  - Packages that are linked to Depots\n- Installation\n  - Windows launch options\n  - macOS launch options\n  - Linux and Steam Deck launch options\n  - Client Images (icon)\n- Stats & Achievements\n  - Stats (11 total for Pincrediball)\n  - Achievements (9 total for Pincrediball) with two images for each one\n- Community\n  - Official Community Group with custom icon image\n- Beta keys\n  - Custom request for beta keys\n\n#### Additional stuff\n\nBefore even gettings started you need to:\n\n- Fill out all Personal and Company details\n- Complete an 8 step Tax form with personal identification\n\nAnd finally, note a few special things:\n\n- Reserve time to handle all feedback from the review process of your store listing\n- You need to pay a \"Steam Direct Fee\" of $100 to create a new game at all on Steam (refunded if you exceed a certain amount of sales)\n- Publishing a game is another 2-5 business days review process\n- Reserve time to build scripts to publish the Depots using the Steam SDK\n\nWew, that's a _lot_ of stuff, isn't it?\nAnd there's something else as well...\n\n### GodotSteam\n\nThat's right!\nYou actually need to write _code_ in your game to support Steam.\nThere's three things I wanted to do when I started integration:\n\n- Basic steam integration (screenshots, shift-tab, etc.)\n- Statistics per player (for potential Leaderboards)\n- Achievements!\n\nIntegrating the Steam SDK in your game would be a rather complicated programming task.\nFortunately there's [GodotSteam](https://godotsteam.com/):\nan open source project to make it easy to integrate Steam into your Godot game.\nAnd it was a breeze to use!\nI extended my \"[Giving back](#post-2023-03-28)\" and donated $9,- (small bits help too, right?) to the project's core maintainer.\n\nYou can check out [the only _43_ lines of code](https://github.com/pincrediball/pincrediball/blob/main/src/steam/steam_facade.gd) needed to integrate Steam into Pincrediball.\n\n### Available now!\n\nI was extremely motivated to get my game onto Steam.\nGood thing too, because it was no joke to get through all that's needed.\n\nAs a consumer, I find Steam to be a great platform.\nThe quality of games is of course a lot higher than on Itch.io.\nIn part, that's probably due to the heavy weight process behind it.\nIt's baffling how bad the UX of their backoffice is at times, but I appreciate how hard it is to maintain a service like Steam.\n\nRegardless.... _I made it_!\nThe game has been out on Steam for a few days now.\nIt's in \"Early Access\" and free of charge.\nGo [check Pincrediball out on store.steampowered.com](https://store.steampowered.com/app/2378150/Pincrediball/).\n\nAll that's left to do now is to write a good wrap-up of the entire project.\nMaybe publish my work in a few other places.\nAnd after that, I think I will \"close\" off this Pincrediball chapter.\n\nWhat a ride it's been.\n",{"key":19,"posts":20},"2023, week 13",[21,27,33,39,45],{"id":22,"isDraft":7,"order":23,"date":24,"title":25,"content":26},"post-2023-03-31",3,["Date","2023-03-31T00:00:00.000Z"],"Day 47: Home stretch! (DEMO RELEASE!!)","## Day 47: Home stretch! (DEMO RELEASE!!)\n\n**_Jeroen_, March 31, 2023**\n\nOn budget and (\u003Cem>tightly\u003C/em>) on schedule I end the final day of my sabbatical project... with a DEMO Release!!\nThere will be one or more epilogue devlogs of a bit more length.\nBut for now:\n\n---\n\n👉 **[Play and/or download the game at pincrediball.itch.io/pincrediball now!](https://pincrediball.itch.io/pincrediball)** 👈\n\n---\n\n**Linux and Windows** are supported, both in-browser and (higher quality) downloads for desktop.\nAndroid devices... are not _officially_ supported, but if you try real hard you might be able to complete the tutorial.\n\n**Sorry Apple users**.... web builds are broken in Godot for all Apple platforms, and an Apple desktop build will take me some more time.\nI'm extremely sad about that, but not much I can do at this immediate point.\n\nOh, and there's a launch trailer too (opens in fresh tab):\n\n[![YouTube video thumbnail](/img/2023-03-31-youtube-image.png) Watch on YouTube...](https://www.youtube.com/watch?v=oXBfiG2kagI)\n\nMany thanks by the way to everyone who supported the project.\nMy friends on Slack and otherwise, testing and giving feedback and whatnot.\nMy colleagues and social media buddies, for the encouragement and interaction.\nThe community and open source authors making the tools I used.\nAnd above all my wife, for, well... everything!\n\nTime to prep a launch-moment-photo to be inserted here:\n\n[![photo of me behind a PC with 0.0 bubbles and doughnuts](/img/2023-03-31-launch-photo.jpg)](/img/2023-03-31-launch-photo.jpg)\n\nAnd after that, I say: thank you.\nAnd: happy gaming!!\nI'm off for some weekend before I need to go back to real life and real work.\n",{"id":28,"isDraft":7,"order":29,"date":30,"title":31,"content":32},"post-2023-03-30",4,["Date","2023-03-30T00:00:00.000Z"],"Day 46: Home stretch! (\"Final to-do's\")","## Day 46: Home stretch! (\"Final to-do's\")\n\n**_Jeroen_, March 30, 2023**\n\nLet's recap the project goal one last time:\n\n> The goal would be to create one small game, end to end, nearly every part of it created by myself.\n> And earn at least one euro with it, which can also be my own 1 euro:\n> I just want to see what it takes to getting to publishing a game.\n\nToday, I reached that milestone!\n\n[![screenshot showing payment of 1 dollar for Pincrediball](/img/2023-03-30-itch-payment-one-euro.png)](/img/2023-03-30-itch-payment-one-euro.png)\n\nMind you, I paid myself that $1 _after_ I successfully completed a playthrough in the browser.\nHere is the html5 version of the game running on itch:\n\n[![screenshot showing the bare bones game page](/img/2023-03-30-pincrediball-on-itch.png)](/img/2023-03-30-pincrediball-on-itch.png)\n\nThe game store page _is_ still in draft and not publicly available.\nBut I _could_ make it public right now and call it good.\n\nSo, what's holding me back?\nWell, about 25 different things.\nHere's the subset I _really_ hope to fix on the last day of the project.\n\n### Plan for The Final Day\n\n#### Apple devices\n\nMacOS, iOS, and iPadOS all fail to load or crash the html5 version of the game.\nRegardless of the browser used.\nI'm not even sure if this is fixable, because I've already spotted several Godot GitHub issues around this subject\n([\\#67949](https://github.com/godotengine/godot/issues/67949),\n[\\#70691](https://github.com/godotengine/godot/issues/70691),\n[\\#72584](https://github.com/godotengine/godot/issues/72584),\nand others).\n\nIt would be fantastic to have a desktop build for macOS as an alternative.\nHowever, it's not trivial to build and sign apps for macOS when you don't have an Apple device around.\nPlus it's also not easy to test then.\n\nSo, **at the very least** I then need to post a very good warning on the itch page.\nWhich is doable enough, even though it's a bit sad.\n\n#### Last-minute game changes\n\nThere's two important things I really want to add:\n\n- some extra introductory hints\n- a final polish of the physics variables\n\nThis can also easily become a time sink, especially the second one.\nPerhaps I should save it for last?\nEither way, it's doable to do _something_ here.\n\n#### Steam Store Page\n\nThere's a _ton_ of things to fill out for Steam.\nI've made a start, but there's just so many details to fill out.\nAnd even then Steam suggests it'll take days to process and review things.\n\nSo this one seems less doable, unfortunately.\nWhich is sad, but not a showstopper.\n\n#### Screenshots and Trailer\n\nA store page isn't much without some good content.\nScreenshots should be easy to make.\nA trailer can easily become a time sink, despite having a bunch of (hobbyist level) video editing experience\n\nProbably I should just start with something, anything really, that's good enough.\nThat's doable too then, I reckon.\n\n#### Publish the itch.io page\n\nThe _final_ thing to do will be to publish it and making it publicly available.\nNice to have would be to add a Desktop build for Windows and Linux (see above why I'm leaving out macOS for the moment).\n\nI will start with a \"soft launch\", by only announcing it on the devlog and to friends and via socials.\nAny feedback or other final polish I might apply after my sabbatical.\nJust to have a slightly better \"real Demo launch\", which I'd hope to share a little broader (though my reach is not huge).\n\n#### Release devlog\n\nOkay, an even _more final_ thing would be to write a final devlog to celebrate the \"soft launch\".\nFriday's post should serve as a little bit of closure, given that my day job starts again on Monday as well.\n\n### And beyond?\n\n\"What lies beyond?\", you'd ask?\nWell, there's a bunch of ideas.\nI will only do the bare minimum to (feel good about it and) announce the game a little bit more broadly.\nAfter that I need a good long break from (this) game('s) development.\n\nIf by some miracle (which I hardly expect) the game racks up a bunch of \"wish listings\", I might actually complete a full game.\nBut more likely reviews will be \"Mixed\" at best, and low in quantity.\nAnd that's totally fine too!\nBecause I enjoyed this sabbatical project a ton.\nAnd that's what counts the most.\n\nBut first, let's get ready for a Final Day in this \"Home stretch!\".\nUntil tomorrow!\n",{"id":34,"isDraft":7,"order":35,"date":36,"title":37,"content":38},"post-2023-03-29",5,["Date","2023-03-29T00:00:00.000Z"],"Day 45: Home stretch! (\"Statistics!\")","## Day 45: Home stretch! (\"Statistics!\")\n\n**_Jeroen_, March 29, 2023**\n\nWe're in the home stretch this week!\nToday's post is all about project statistics!\nThe meta stuff, to build some tension towards the actual beta release!\n\n### Project hours\n\nI've not kept exact track of things, but I think I can guesstimate quite well where I spent my time.\nHere's a breakdown of the hours I put into this project:\n\n[![Statistics showing division of hours for the project over week 7 through week 13 of the year, with \"Game programming, Godot\" topping at 59 hours out of total 361 hours spent](/img/2023-03-29-hours-estimation.png)](/img/2023-03-29-hours-estimation.png)\n\nOr in a more accessible table:\n\n\u003Cdiv class=\"hidden sm:block\">\n\n|                                   | TOTAL HOURS |      7 |      8 |      9 |     10 |     11 |     12 |     13 |\n| :-------------------------------- | ----------: | -----: | -----: | -----: | -----: | -----: | -----: | -----: |\n| Learning (Svelte + Sveltekit)     |          11 |      4 |      6 |      0 |      0 |      0 |      0 |      1 |\n| Learning (Godot)                  |      **40** |      0 |      0 |      3 |     14 |     16 |      6 |      1 |\n| Learning (Phaser)                 |          24 |     12 |      8 |      4 |      0 |      0 |      0 |      0 |\n| Game (art and design)             |          30 |      6 |      2 |      2 |     12 |      2 |      4 |      2 |\n| Game (programming, Godot)         |      **59** |      0 |      0 |      3 |      6 |     16 |     12 |     22 |\n| Game (programming, Phaser)        |          24 |      4 |     16 |      4 |      0 |      0 |      0 |      0 |\n| Game (other stuff)                |          20 |      2 |      2 |      2 |      2 |      1 |      3 |      8 |\n| Website (blogging)                |      **38** |      5 |      6 |      3 |      6 |      5 |      7 |      6 |\n| Website (building)                |          24 |     12 |      6 |      1 |      1 |      2 |      1 |      1 |\n| Meta (socials, store pages, etc.) |          29 |     10 |      6 |      0 |      1 |      1 |      1 |     10 |\n| Procrastination (productive)      |          20 |      0 |      5 |      2 |      2 |      2 |      8 |      1 |\n| Procrastination (wasteful)        |          18 |      1 |      1 |      2 |      2 |      2 |      6 |      4 |\n| Pinball research                  |          24 |      4 |      4 |     10 |      1 |      1 |      4 |      0 |\n| **TOTAL**                         |     **361** | **60** | **62** | **36** | **47** | **48** | **52** | **56** |\n\n\u003C/div>\n\n\u003Cdiv class=\"block sm:hidden\">\n\n|                                   |   HOURS |\n| :-------------------------------- | ------: |\n| Learning (Svelte + Sveltekit)     |      11 |\n| Learning (Godot)                  |  **40** |\n| Learning (Phaser)                 |      24 |\n| Game (art and design)             |      30 |\n| Game (programming, Godot)         |  **59** |\n| Game (programming, Phaser)        |      24 |\n| Game (other stuff)                |      20 |\n| Website (blogging)                |  **38** |\n| Website (building)                |      24 |\n| Meta (socials, store pages, etc.) |      29 |\n| Procrastination (productive)      |      20 |\n| Procrastination (wasteful)        |      18 |\n| Pinball research                  |      24 |\n| **TOTAL**                         | **361** |\n\n\u003C/div>\n\nObviously this contains a forecast for this week as well, and assumes I'll actually finish it this week.\n\nAn indication of my confidence levels: roughly 4 out of very 5 cells is probably ± 20% accurate.\nThe overall estimates per week as well as the grand total are near certainly ± 20% accurate as well.\n\nOriginally I had estimated I'd be able to do this project within 6 (instead of 7) weeks.\nHad I chosen Godot initially I would've probably made that.\nBut I won't complain: I enjoyed myself nearly all the way through, and am pretty happy with this outcome!\n\n### Code statistics\n\nSecond, let's look at some code statistics.\nHere's a quick export of the current (nearly complete) [core game repository](https://github.com/pincrediball/pincrediball) code statistics:\n\n[![Statistics showing equal parts GDResource and GDScript lines of code across roughly two dozen files each, total 4351 lines of code in 66 files](/img/2023-03-29-code-statistics.png)](/img/2023-03-29-code-statistics.png)\n\nOr in a more accessible table:\n\n\u003Cdiv class=\"hidden sm:block\">\n\n| Language   | Files |  Code | Comment | Blank | Total |\n| :--------- | ----: | ----: | ------: | ----: | ----: |\n| GDResource |   144 | 5,025 |       7 | 1,223 | 6,255 |\n| GDScript   |    32 | 1,104 |      15 |   480 | 1,599 |\n| Properties |     1 |   437 |       0 |    20 |   457 |\n| Markdown   |     2 |    46 |       0 |    12 |    58 |\n| gdshader   |     1 |    23 |       3 |     5 |    31 |\n| JSON       |     1 |    23 |       0 |     1 |    24 |\n\n\u003C/div>\n\n\u003Cdiv class=\"sm:hidden\">\n\n| Language   |  Code | Comment | Total |\n| :--------- | ----: | ------: | ----: |\n| GDResource | 5,025 |       7 | 6,255 |\n| GDScript   | 1,104 |      15 | 1,599 |\n| Properties |   437 |       0 |   457 |\n| Markdown   |    46 |       0 |    58 |\n| gdshader   |    23 |       3 |    31 |\n| JSON       |    23 |       0 |    24 |\n\n\u003C/div>\n\nI'm actually quite relieved and happy that the lines of code for the game well exceeds the 1500 lines of markdown (plus 500 lines of svelte)\nfor the [pincrediball.com repository](https://github.com/pincrediball/pincrediball.com).\nEven though I'm still also proud of the extremely consistent blogging side of things!\n\nNote that the above statistics do not include:\n\n- The prototypes (Godot nor Phaser prototypes)\n- The sample repositories I made to help myself and others\n- The code I wrote for forums and online Q&A\n- The code I threw away...\n\n### Back to the game\n\nSo, is that _it_ then?\nWill the above roughly be what entailed a fully featured beta-release, which will [earn me at least 1 euro](#day-29-planning--goals)!?\nWell, today I made the first full-featured release candidates.\nIt works well on Windows, can be made to work on the Web (to a degree), and even worked on Linux!\n\nA good friend went above and beyond testing this release on Linux.\nFeedback included a ton of DM's, a dozen or more screen recordings, and some initial feedback:\n\n> - I'd like to be able to mirror/flip some components;\n> - Some physics bugs occur where the ball lies still when it shouldn't;\n> - The \"Run Playbook\" feature should be more discoverable;\n> - Can we move and rotate things at ones, please? (Is that even possible?);\n> - Bumper-walls don't communicate they only bump on one side;\n> - Missing a \"true\" full screen mode (or borderless maximized);\n\nBut also some positive feedback, or positive words of encouragement!\nAnd regardless of which it is, it made me smile.\n\nPlus, it gave me a little extra energy for this home stretch!\nTwo days left...\n",{"id":40,"isDraft":7,"order":41,"date":42,"title":43,"content":44},"post-2023-03-28",6,["Date","2023-03-28T00:00:00.000Z"],"Day 44: Home stretch! (\"Giving back\")","## Day 44: Home stretch! (\"Giving back\")\n\n**_Jeroen_, March 28, 2023**\n\nI'll be coding a bunch today, it's [the home stretch](#post-2023-03-27) after all.\nI'm on schedule, but it's a _tight_ schedule.\nBut that's not the topic of today's devlog...\n\n### Giving back\n\nAs you might know or now realize: I'm not a game developer by trade.\nInstead, I make a good living in web development.\nPincrediball has been an 8-week-vacation project.\nAnd it's been made possible in part by other people who invest their free and own time in **Open Source** projects.\n\nI could've spent my vacation in several other ways.\nPrime candidates would've been:\n\n- watching series all day (roughly 15 euro's per months); or\n- playing a few AAA games (20ish euro's a pop at a discount); or\n- reading all the books I still have in queue (50 euro's worth); or\n- take an intensive Spanish course (100 euro's, I'd reckon).\n\nSo **I figured I donate some of that \"saved\" money to the Open Source projects that made Pincrediball possible**.\n\n### Donations\n\nToo many options to choose from, but something's better than nothing.\n\n![Six colorful logo's in a row (Svelte, Browserlist, Godot, Phaser, Prettier, and Doctors without Borders)](/img/2023-03-28-pincrediball-donations.png)\n\nSome rationales for choosing these projects, with links if you want to donate too:\n\n- ♥ [**Godot**](https://godotengine.org/donate/),\n  (€40,-) because it is the main Pincrediball engine.\n- ♥ [**Phaser**](https://phaser.io/community/donate),\n  ($30,-) because I want to see it improve!\n- ♥ [**Svelte**](https://opencollective.com/svelte),\n  ($20,-) because it powers the website and was a joy to work with.\n- ♥ [**Browserlist**](https://opencollective.com/browserslist),\n  ($20,-) which I picked from `npm fund`, and which I probably often rely on.\n- ♥ [**Prettier**](https://github.com/prettier/prettier?sponsor=1),\n  ($20,-) which I picked from `npm fund`, because it sparks joy!\n- ♥ [**Doctors without Borders** (NL)](https://www.artsenzondergrenzen.nl/doneer/doe-een-gift/),\n  (€25,-) on behalf of the many different people who spent time to answer my questions of forums.\n\nNo heavy analysis (as I normally do with _everything_), just picked a few logical ones and went with it.\n\n### Home stretch\n\nThat's really all for the devlog today.\nNo further Pincrediball content at all.\nI'll be posting this one in a second, grab some more coffee, and get coding.\nWhatever gets added will be rolled up into a future devlog!\n\nCatch you in the next one.\n",{"id":46,"isDraft":7,"order":47,"date":48,"title":49,"content":50},"post-2023-03-27",7,["Date","2023-03-27T00:00:00.000Z"],"Day 43: Home stretch! (Part 1 of 5)","## Day 43: Home stretch! (Part 1 of 5)\n\n**_Jeroen_, March 27, 2023**\n\nGot up at 07:00 for some spinning and Last of Us, followed by a quick shower.\nAt 08:00 I was ready for the first day of the final project week.\nA good start surely leads to a good day?\n\n### Coming together\n\nAnd a good day it was!\nThings are coming together quite nicely, and today I added plenty of small and big features:\n\n- ✔ Saving and loading the player's Progress\n- ✔ Saving and loading Options\n- ✔ Progress overview improvements\n- ✔ Revamped and improved toolbox\n- ✔ Navigating the various stages (still called \"levels\" at the moment)\n- ✔ Animations to help with navigation\n- ✔ Less score disabling, now only when needed\n- ✔ Drag & Drop improvements\n- ✔ Better descriptions for toolbox items\n- ✔ Medal update improvements\n- ✔ Extra sounds\n\nAnd in general **level progression is now working**.\nWhich means **you can now actually _finish_ a playthrough**.\nI do still need to add a celebration screen for that, amongst other things.\n\nHere's the current state of things:\n\n[![Main screen of the game](/img/pincrediball-v1-20230327-overview.png)](/img/pincrediball-v1-20230327-overview.png)\n\nSeveral of the above mentioned features in action right there.\nShowcase of the animations will have to wait, because today was a long day.\nI _will_ showcase one extra still though:\n\n[![Main screen of the game](/img/pincrediball-v1-20230327-progress.png)](/img/pincrediball-v1-20230327-progress.png)\n\nThis are the scores my primary beta tester (thank you, dear! \u003C3) in her first full playthrough!\nOne for the books.\n\n### Four days left\n\nSo that is one day down, four to go this week.\nTomorrow we'll round out something that's \"releasable\".\nThat should leave three days to actually release some thing, and round up otherwise.\n\nWho knows!?\nMaybe I'll have a spare day of vacation left on Friday?\n\n...\n\nNah, who am I kidding?\nI'll probably just add more features, content, or polish.\n\nOnwards!\n",{"key":52,"posts":53},"2023, week 12",[54,60,66,72,78,84],{"id":55,"isDraft":7,"order":56,"date":57,"title":58,"content":59},"post-2023-03-26",8,["Date","2023-03-26T00:00:00.000Z"],"Day 42: Weekend Bonus (XXL devlog)","## Day 42: Weekend Bonus (XXL devlog)\n\n**_Jeroen_, March 26, 2023**\n\nIt's awesome when people _read_ my posts online.\nBut most of my _motivation_ comes from the _writing_ itself.\nWriting posts will:\n\n- Help me cement and remember learnings;\n- Straighten out my thoughts;\n- Make plans or brainstorm ideas;\n- Let me vent a little when needed;\n\nThe fact that people _might_ read my posts helps me aim for some level of quality.\nThe fact that my motivation comes from within in turn helps restrain the perfectionism.\n\nToday's \"bonus\" post is about the first bullet.\nIt's about cementing learnings about game dev tricks I didn't know about before.\nIn no particular order, it's a list of techniques that have (at first sight!) no big cross-over to web development (or do they!?).\n\n**⚠** As such, it's a rather lengthy post! I won't blame you for sitting this one out.\n\n### Game Development Specifics\n\nFirst, let's start with things largely _specific_ to game development.\n\n#### Shaders\n\nWhen playing AAA games a loading screen might call out \"_Pre-processing shaders_\" or something similar.\nSo I knew there was something called \"shaders\".\nBut since this week I know what they actually are.\nAnd how to make (a basic) one.\n\nIn my understanding, a shader is (usually) a short program written in a specific shader-language.\nIt's used to manipulate pixels and other low-level graphics objects just before they reach the screen.\nYou can layer and combine them with other shaders, on top of an the original textures and rendered pixels.\n\nYes, that's a gross and possibly imperfect oversimplification!\nBut I think I'll defer to [the Wikipedia article](https://en.wikipedia.org/wiki/Shader) and its references for a better overview.\n\nI [adapted a basic an existing shader](https://github.com/pincrediball/pincrediball/blob/main/src/menu/menu.gdshader) to have a starry background for the game.\nAnd I'm confident I could do some more stuff with shaders myself now, if I want or need to.\n\n#### Particles\n\nThis does what it says on the tin: it generates particles!\nThink \"fireworks\" and \"confetti\".\n\nA good friend tipped me to try and add some more things for the \"feel\" of the game.\nWhich is a great tip, and a good incentive to learn about particles.\nSo now there's now a little celebratory fireworks for achieving a medal score:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-v1-20230326-particles.mp4\" type=\"video/mp4\" />\n  fireworks in the game\n\u003C/video>\n\nIn the background you can also see the \"Stars\" shader in action.\n\n#### Animations\n\nGodot does animations with an `AnimationPlayer` (and a `Tree` for complex stuff) node.\nMy experience with Non-Linear Editing tools for video came in handy here.\nBasically you create a little timeline, add a \"track\" per thing to animate.\nThen tell it the \"Key Frame\" states, and Godot animates between those states.\n\nI only used it for simple fade in- and out animations so far, for example for the splash screen.\nBut it can do far more complex stuff, prime example being animation of physics objects (e.g. a \"walking\" animation).\nWhich (I fear) can easily slurp up a lot of time.\n\nBy the way, many things you see \"animate\" (move) in the game currently are _not_ animations.\nThey fall under a different category, up next.\n\n#### Audio\n\nThe tip to add audio sooner rather than later was gold.\nBecause with some generated and royalty-free sounds you can go a long way.\nAnd Godot makes it rather easy to just have code play a sound or two at the right time.\n\nApart from the very basics, I have not touched any of the advanced stuff.\nI know there's things like spatial audio, sound effects, and many more.\nBut I left those out of scope for this project.\nSo not much more to say here.\n\n#### Physics\n\nIn a game engine like Godot, two things go hand in hand: graphics and physics.\nAny game object with physics or collision properties takes part in a simulated 2D or 3D world.\nA tiny \"delta\" of a few milliseconds is taken each \"step\" to estimate the next state of the world.\nAfter that the graphics are updated to reflect that.\n\nThere's a _million_ things to properly arrange and set to create interesting games.\nIncluding:\n\n- **Physics properties**, such as gravity, friction, mass, inertia, torque, and many more.\n- **Collision details**, like the collision shapes of things as well as layers (which things can collide with each other)\n\nIt's incredibly easy to get started.\nAnd it's incredibly tough to debug and tweak.\n\n### Web Development Overlap\n\nSecond, there are a few things that have overlap with building web apps.\nThings you also need to master (at least a bit) and work out in a game.\nA quick list.\n\n#### Language\n\nFor Godot you _can_ choose C#, a language I know well.\nBut nearly _all_ examples and knowledge online uses GDScript, so I stuck with that.\nGDScript is Godot's Python-like scripting language.\nEasy enough to pick up if you know a little Python or other languages.\nBut certainly rough around the edges, and annoying to use at times.\n\n#### Data\n\nThis feels like a really underdeveloped area of (Godot) game development.\nI _know_ big game studios _must_ be using the techniques we know from other fields.\nBut beginners will find tutorials suggesting spreadsheets, exports to CSV, and some duck typing after reading the data.\n**Insanity!**\nAnd it doesn't help that the main language (GDScript) doesn't know if it wants to be truly Object-Oriented, or not.\n\n#### Data-Flow\n\nWith data-flow, it feels like only 1% of generic software development practices reach game development.\nMany important patterns -with the exception of State Machines!- are nearly absent in tutorials and documentation.\n\nAgain, surely big studios and experts have solutions, right?\nBut beginners are left creating spaghetti and tightly coupled singletons.\nAnd I found myself somewhere in between, implementing poor-man's versions of uni-directional data flows and message buses.\n\n#### GUI Layout\n\nPowerful and workable on one hand.\nOn the other hand, it reminds me of FrontPage, DreamWeaver, Java Swing, WinForms, as well as the tables-for-layout era of web development.\nA _pain_ to use.\nWorth a devlog (essentially a long rant) on its own.\nBut having _something_ like this at all was great; not sure how far I'd gotten without it.\nSo mixed feelings about this in the end.\n\n#### Tooling\n\nThe main tool is the Godot editor.\n\nThe visual designer was extremely helpful as a beginner.\nFrustrating at times (looking at you, Undo Feature!), but a smooth experience for the most part.\n\nThe script editor, (nonexistent) refactoring tools, file system-based project structure, and overall editing experience...\nWell, let's say we're _spoiled_ as web developers.\nThe experience with Godot is \"okay\", but not nearly as good as when doing web development.\n\nYou _can_ use external editors and tooling (like VSCode or Visual Studio), but that felt firmly outside of a beginner's scope.\n\n#### Debugging\n\nUgh.\n\nOkay, I guess I'm grateful we have _something_.\nBreak points mostly work.\nInspectors largely work, and there's always `print` statements, right?\nPlus, shout out to the option to show collision shapes in a game: super helpful!\n\nBut it's absolutely no match for the debug tools we get in modern browsers.\nOr the experience in -say- Visual Studio or JetBrains tooling.\nMany times with Godot I found myself just going through and changing _all_ properties of an object, until I hit the right one.\n\nBut quite possibly this one's on me, for not learning the tools properly before using them?\n\n#### Version Control\n\nBasically the same as in web development.\nIt's great that most assets are text based files.\nSo git does the trick.\n\nFor larger games you probably need a better solution for binary assets such as art and sound?\nBut for small projects I think throwing them (neatly) in your repository works well enough.\n\n### In summary\n\nGame Development made me investigate _new_ tools and techniques.\nThings I didn't know much about at all from web development.\nI touched the basics of **Shaders, Particles, Animations, Audio, and Physics**.\nAnd there are many more things to learn about as well.\n**A great experience to try my hand at these things!**\n\nGame Development also showed _overlap_ with Web Development.\nI often felt underwhelmed and disappointed here.\nIt still eludes me how to do proper **architecture, data (flow), layout work, tooling, and debugging** in Game Development.\nBut really, **I expect this largely to be due to my own lack of research and learning**.\n\nI suppose this post has become a (technical) summary of the entire project.\nWhich is great, because that leaves one less thing to procrastinate with next week.\nWhen I should really _finish_ the project.\n",{"id":61,"isDraft":7,"order":62,"date":63,"title":64,"content":65},"post-2023-03-24",9,["Date","2023-03-24T00:00:00.000Z"],"Day 40: Dropping what we don't need!","## Day 40: Dropping what we don't need!\n\n**_Jeroen_, March 24, 2023**\n\nAfter some more [R&D on input handling](https://github.com/jeroenheijmans/sample-godot-node2d-input-handling)\nI merged a [big PR](https://github.com/pincrediball/pincrediball/pull/45)\nwhich finalizes a working version of **Drag and Drop**, and then some:\n\n> ```none\n> Fixes #14 (Drag and Drop)\n> Fixes #39 (Credits)\n> Fixes #38 (Options)\n> Fixes #36 (Splash screen)\n> Fixes #37 (Menu)\n> Fixes #21 (Menu music, which is just the game music but that's fine for now!)\n>\n> See also #18 (Medals and Level progression, doing a little work for that already)\n>\n> Followed by #46 (Drop leading to overlaps)\n> Followed by #47 (Rotation of components)\n> ```\n\nQuite satisfying, in many ways.\nThe PR itself was a hot mess of commits and different concerns being handled.\nBut in my defense I'll say that this is okay for a hobby project...\nand it seems to be \"The Way\" for game development in general?\n\nAnyways, let's end this week with a recap of where things stand.\n\n### Current State\n\nAnd as you by now know, I prefer to show that with a quick video:\n\n\u003Cvideo controls loop muted>\n  \u003Csource src=\"/img/pincrediball-v1-20230324-demo.mp4\" type=\"video/mp4\" />\n  Video recording with 2 minutes of demo gameplay\n\u003C/video>\n\nI got a good friend (who also happens to be a very good game developer) to play the current version.\nQuality of the game(play) aside for a moment, I think the game felt quite playable already.\nLooking at him poke about, tweaking the machine, just to see what will happen next, was rewarding for sure!\n\nThe \"Current State\" also includes that I'm at the eve of the final week of this project.\nSo that brings us to what's up next.\n\n### Final stretch\n\nWith the merged PR today I closed the [alpha-release milestone](https://github.com/pincrediball/pincrediball/milestone/1?closed=1).\nNext up is the [beta-release milestone](https://github.com/pincrediball/pincrediball/milestone/2).\nThat includes (at the time of writing this) the following work:\n\n- Medals and level progression\n- Gates and Drop Target Banks\n- Forces (gravity, friction, etc) tweaks\n- Some content for YouTube and other socials\n- Reserve itch.io and Steam Store page\n- Some polish\n\nAnd heck, I'll be dropping anything which I don't absolutely _need_.\n\nEither way, there's one week left in my mini-sabbatical.\nAnd... **this seems doable!**\nMind you: \"doable\" in the sense that \"it _can_ be done\", not \"this will be easy\".\nI'm optimistic, not ignorant.\n\nAlso, **what I (currently) still lack in game development skills, I think I make up for with persistence and commitment**.\nPut differently: building a _high quality_ game will be for some other time,\n_finishing_ something is the name of the current game!\n\nLet's see if I can make good on those claims next week?\n",{"id":67,"isDraft":7,"order":68,"date":69,"title":70,"content":71},"post-2023-03-23",10,["Date","2023-03-23T00:00:00.000Z"],"Day 39: Dragging indeed...","## Day 39: Dragging indeed...\n\n**_Jeroen_, March 23, 2023**\n\nBack to Drag & Drop today, indeed!\nBut only after a teensy tiny bit more side-work.\n\n### Game Structure Improvements\n\nThe menu screens and all that are just so satisfying.\nRounding the project out as an actual game.\nIf even of dubious quality.\n\nFirst up, we have some proper options.\nStyling `CheckButton`s in Godot is again an absolute _pain_, and not fun work at all.\nBut I'd learned my lesson and switched to `TextureButtons` within minutes:\n\n[![Sound and Music toggle buttons in the game](/img/pincrediball-v1-20230323-options.png)](/img/pincrediball-v1-20230323-options.png)\n\nIt ain't much, but it was an honest hour's work!\nAnd I'm sure you will believe me when I say that a working \"_Continue Game_\" option is equally glorious!?\n\n### Gameplay Improvements\n\nSeveral things have been improved on the gameplay side as well:\n\n- ✔ Scores now show the medals you achieve as you run a playbook\n- ✔ Score targets are now data-driven, can be different per level\n- ✔ Disabled scoring when running a \"Stress Test\" is now more clear\n- ✔ Component unlocks has been prepared\n- ✔ A \"DEBUG\" button allows you to skip to the last level and unlock all components\n\nJust for something shiny to look at, here's all of that in action:\n\n[![Gameplay showcase](/img/pincrediball-v1-20230323-gameplay.png)](/img/pincrediball-v1-20230323-gameplay.png)\n\nThis also ain't much, but it was an honest day's work!\n\n### Beta Release?\n\nYesterday I ended with a mention of the [Alpha Release](http://localhost:5173/devlog#day-38-productive-procrastination--alpha-release).\nGuess today I can already even talk about a beta release.\nBecause if quality levels are negotiable, we can get to the fixed deadline and feature set sooner.\nAnd looking at the [Project Board](https://github.com/orgs/pincrediball/projects/1/views/1) we're pretty close, actually.\n\nAnd that's a good thing, because I have one day plus one week left.\nSo let's reach a good milestone tomorrow, shall we?!\n",{"id":73,"isDraft":7,"order":74,"date":75,"title":76,"content":77},"post-2023-03-22",11,["Date","2023-03-22T00:00:00.000Z"],"Day 38: Productive Procrastination","## Day 38: Productive Procrastination\n\n**_Jeroen_, March 22, 2023**\n\nI needed a _\"win\"_ today.\nSo I took a break from Drag & Drop, hoping for a break in Godot gotchas as well.\nTime for some \"**Productive Procrastination**\"!\n\n### Splash screen\n\nI finalized the splash screen.\nNot much to say or show about this.\nBut it does round out the game as a real _game_.\n\n### Menu\n\nAlthough not even strictly necessary, I wanted to further \"round out\" Pincrediball with a proper menu.\nSo I built one today.\nLet's enjoy the results before we \"enjoy\" the struggles:\n\n[![Animation of the menu with classic game controls like \"New Game\" and \"Exit\"](/img/pincrediball-v1-20230322-menu.gif.gif)](/img/pincrediball-v1-20230322-menu.gif.gif)\n\nBuilding this felt like I was teleported back to 1998.\nThat's when I was doing web layouts with tables.\nWe were building rounded corners on things with 3x3 tables and a background image tailored to each cell.\n\n_Anno 2023_ Godot even has [a dedicated control](https://docs.godotengine.org/en/stable/classes/class_ninepatchrect.html) for this.\nNow that remark's a bit of a cheap shot, but even the _intended_ controls are an absolute _pain_.\nFor sure a pain to _learn_, and so far also a pain to _use_.\n\nSo I gave up.\nAnd just created some pixel-perfect buttons in Figma, once for each state.\nAnd used a `TextureButton`.\nCop out?\nMaybe.\nSatisfying?\nHell yes!\n\n### Credits\n\nThe pinnacle of productive procrastination must be to create Credits for an unfinished game.\nSo that's what I did!\nA tiny sneak peak (for full credits you'll need to play the actual game!):\n\n[![Animation of the credits roll](/img/pincrediball-v1-20230322-credits.gif.gif)](/img/pincrediball-v1-20230322-credits.gif.gif)\n\nDid I use all the tricks and hacks I had up my sleeve?\nMaybe.\nAm I proud of that?\nAlso maybe.\n\n### Alpha release?\n\nMy [goals](#day-29-planning--goals) haven't changed.\nThe plan _has_, a little.\nToday I let my partner try out the very first build of Pincrediball to leave my machine.\nSo technically the \"alpha\" release has been done and tested.\nAnd it gave plenty of good feedback!\n\nWith that shortcut taken I can chug along towards the goals while sacrificing a little bit of quality.\nToday an intermezzo was on the menu.\nTomorrow we're having the next course: more Godot (gotchas), until we have a fully playable game!\n",{"id":79,"isDraft":7,"order":80,"date":81,"title":82,"content":83},"post-2023-03-21",12,["Date","2023-03-21T00:00:00.000Z"],"Day 37: Dropping the beat!","## Day 37: Dropping the beat!\n\n**_Jeroen_, March 21, 2023**\n\nYesterday I did the first bits of drag action.\nToday dropping stuff in the right places has been implemented.\nThere's a _metric_ ton of things left to smooth out, but let's start with the good parts.\nHere's what you can currently do:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-v1-20230321-drag-and-drop-basics.mp4\" type=\"video/mp4\" />\n  Video recording showing drag and drop of Pinball machine components\n\u003C/video>\n\n_Super_ clunky, but you might get the basic idea?\n\n### Checklist\n\nSo we achieved quite a bit today:\n\n- ✔ Dragging \"new\" components from the toolbox on the left to the playing field\n- ✔ Dragging \"existing\" components on the playfield around\n- ✔ Crude animation (green flashing area) of the valid drop area\n- ✔ Fallback for when trying to drop outside the valid area\n\nIn addition to some other unrelated improvements:\n\n- ✔ Music and SFX toggle buttons\n- ✔ Run Playbook option will now reset the balls\n- ✔ Official \"Stress Test\" option to fire off 10 balls\n- ✔ Score reset when running playbooks\n- ✔ Score disabled during a \"Stress Test\"\n\nBut there's a ton left that's not (yet) working surrounding Drag & Drop functionality:\n\n- ❌ Rotating certain components (bumper pills and wall corners) is missing\n- ❌ Toolbox items should be usable only the allotted number of times, not infinitely\n- ❌ You should _not_ be able to move items during a play run\n- ❌ Each Playbook should get a maximum number of seconds of runtime\n- ❌ A \"Stop Playbook\" option is needed\n- ❌ The \"Toolbox\" looks ugly and cramped, the layout needs work\n\nAnd given the late hour when I write this probably a few more things.\n\n### Kowalski, analysis!\n\nThe situation is... ~grim~ ~dire~ ~ugly~ ~promising~... frustrating?\nGodot and game development are a struggle (for a web developer by trade).\nAround every corner there's a new gotcha waiting, it seems.\nPerhaps my expectation of picking it up quickly given software development skills in other areas was unrealistic?\n\nEither way I'm proud to be pressing on.\nAnd proudly press on, I shall!\nThe quality might not be where I want it to be, but my [goals](#day-29-planning--goals) I _will_ reach!\n\nOnward.\n",{"id":85,"isDraft":7,"order":86,"date":87,"title":88,"content":89},"post-2023-03-20",13,["Date","2023-03-20T00:00:00.000Z"],"Day 36: Dragging my feat...","## Day 36: Dragging my feat...\n\n**_Jeroen_, March 20, 2023**\n\n**Yikes!**\nOnly two weeks left to finish my [goals](#day-29-planning--goals).\nI've nicely stuck to the plan, and worked on Drag & Drop of Pinball components today.\nWhich brings me to say...\n\n**Whelp!**\nDoing drag and drop in Godot is not easy ~at all~.\nThe very first steps are trivial.\nMany tutorials describe how it's done.\nBut the edges... are rough.\nAnd when I get distracted, I get _distracted_;\nand I'll write an entire sample of [how Drag & Drop could be done](https://github.com/jeroenheijmans/sample-godot-drag-drop-from-control-to-node2d).\nGuess I'd summarize it with a...\n\n**Grumble!**\nA _satisfied_ \"grumble\" though, because I worked hard, I made progress, and learned new things.\nBut a \"grumble\" nonetheless, because tomorrow will be another full day of dragging this feature along.\nLet's hope I'll get it done with one more day.\nOr at the very least have fun while trying!\n",{"key":91,"posts":92},"2023, week 11",[93,99,105,111,117],{"id":94,"isDraft":7,"order":95,"date":96,"title":97,"content":98},"post-2023-03-17",14,["Date","2023-03-17T00:00:00.000Z"],"Day 33: Sound's good?","## Day 33: Sound's good?\n\n**_Jeroen_, March 17, 2023**\n\nAlthough there's plenty of visual changes, today it's worth viewing progress with sound turned on (I muted it by default):\n\n\u003Cvideo controls loop muted>\n  \u003Csource src=\"/img/pincrediball-v1-20230317-audio-added.mp4\" type=\"video/mp4\" />\n  Video recording the Tutorial Pinball Machine, with playbook features\n\u003C/video>\n\nAre these the best sound effects and bits of background music in the world?\nNo.\nBut it's _something_ and that's where we've got to start!\n\nSome other changes, next to music and sound:\n\n- The \"Playbook\" top left is now \"real\" and connected;\n- The \"Run Playbook\" button will reset score and flippers;\n- The \"Your Score\" part has been better aligned with \"Score Targets\";\n- Basics for level medals and level progression are in place.\n\n### Alpha release then?\n\nSo one notable thing is _still_ missing: [Drag & Drop](https://github.com/orgs/pincrediball/projects/1/views/1).\nWhich actually is the core of the inner game loop.\nTogether with a few other bits it's the last thing missing for the alpha release.\nHere's a snapshot of [the Kanban Board](https://github.com/orgs/pincrediball/projects/1/views/1):\n\n[![Snapshot of a Kanban board with only a few \"Alpha Release\" items left](/img/pincrediball-v1-20230317-kanban-snapshot.png)](/img/pincrediball-v1-20230317-kanban-snapshot.png)\n\nI'm a bit sad that I didn't fully finish the alpha release this week.\nIf I'd pushed a bit harder this week, or would work a bunch over the weekend, I'd be able to finish it.\n\nBut I won't.\nIt's a hobby- and vacation project.\nIt's meant to be fun.\nAnd there's plenty of time left.\nSo I'm off for the weekend, and will continue on Monday where I left off.\n\nSee you then!?\n",{"id":100,"isDraft":7,"order":101,"date":102,"title":103,"content":104},"post-2023-03-16",15,["Date","2023-03-16T00:00:00.000Z"],"Day 32: Alpha Release nearby","## Day 32: Alpha Release nearby\n\n**_Jeroen_, March 16, 2023**\n\nWe're steadily approaching a state where I'm ready to let some initial testers handle it.\nThis version of the game will be equivalent to what you get at the end of a \"Design Sprint\".\nIt requires a test script and an interviewer (to explain what's _not_ finished and testable yet).\nBut still: a milestone!\n\nHere's what currently happens when you play the game:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-v1-20230316-playbook-demo.mp4\" type=\"video/mp4\" />\n  Video recording the Tutorial Pinball Machine, with playbook features\n\u003C/video>\n\nNotably the **drag and drop features are missing** so you can't actually _play_ the game yet.\nThat will be [the main issue](https://github.com/orgs/pincrediball/projects/1/views/1?pane=issue&itemId=22796854) to tackle tomorrow!\nWith some further tweaks to some components, physics, and _maybe_ placeholder sound effects, we should close in on the alpha release.\nNice!\n\nNow excuse me while I run off to play some Lego Star Wars or Cascadia, and recharge for the last day of this week tomorrow.\n",{"id":106,"isDraft":7,"order":107,"date":108,"title":109,"content":110},"post-2023-03-15",16,["Date","2023-03-15T00:00:00.000Z"],"Day 31: Mixed feelings","## Day 31: Mixed feelings\n\n**_Jeroen_, March 15, 2023**\n\nI feel good about today's progress.\nAnd I feel pretty salty about today's progress.\nMixed feelings, I'd say.\n\n### Salty\n\nBuilding the foundations for the final app I encountered a super weird bug.\nThe ball would sometimes just jump off on its own.\nAnd sometimes it would \"sink\" into a platform.\n\nHere's what it the bug looks like (with some slow motion):\n\n[![animation of ball jumping up on its own](/img/pincrediball-v1-20230315-physics-bugs.gif)](/img/pincrediball-v1-20230315-physics-bugs.gif)\n\nAfter _hours_ of reading documentation, bisecting code, and debugging, I found the issue:\n**the texts and white rectangle to the _left_ of the machine can _sometimes_ cause the ball inside the machine to jump about**.\nAbsolutely nuts!\n\nSo I felt pretty unhappy about lost time.\nBut Annoyance made room for feeling relieved when I found a good minimal way to reproduce it.\n\nYet I was soon back to being even more salty again.\nHere's how.\nI wrote [a good reproducible scenario](https://github.com/jeroenheijmans/repro-godot-bounce-bug) and [GitHub issue for Godot](https://github.com/godotengine/godot/issues/74940)\nA super short summary of the repro:\n\n- Create a specific (valid!) Node Tree\n- The tree involves combining GUI and Node2D nodes with physics\n- The presence of a white rectangle (!) next to the physics node, can affect if the physics _inside_ that node in weird ways\n\nHowever, I was informed in a one-sentence reply:\n\n> I think this is not a bug, but **user error**.\n\nAhh, the good old \"_stupid user_\" excuse.\nBecause the wording straight up _blames_ the user for their problems.\n_They_ are in error.\nThis probably makes me extra salty because I've used that excuse myself in the past.\nAnd I'm now ashamed I used to do so.\n\nAnother user is slightly more friendly, but still also says:\n\n> [This is not on] the engine [..., only] a **wrong expectation** [by you].\n\nWith a bit of empathy, the same meaning for both replies could be conveyed in a much friendlier way.\nPlus I _still_ think that it's reasonable to expect either the Editor or the Documentation to somehow help users avoid this pitfall.\nEspecially since behavior _inside_ a component was erratically affected by its siblings.\n\nThe second commenter ended with a bonus suggestion too:\n\n> I recommend joining one of the communities to get feedback and support when looking for a solution and ending up with something that is not working.\n\nGuess that's a pretty strong hint that I should not be investing in any further interaction with Godot's GitHub community...\n\n### Happy\n\nEven through that loss of several hours, I still made some good progress!\nSo there's also reasons to be happy.\nAbove animated gif already showed it, here's also a still image of the current state of the game:\n\n[![Game screen with all components there](/img/pincrediball-v1-20230315-snapshot.png)](/img/pincrediball-v1-20230315-snapshot.png)\n\nLots of the basic interaction has been ported over from `prototype-007` as well.\nBut more importantly, the project and file structure are now well-organized and clean.\n\nI'm on schedule to have an alpha version of the game ready for _friendly_ testers near or shortly after the end of this week.\nAnd I'm pretty happy about that.\n\n### Next up\n\n[The GitHub Kanban Board](https://github.com/orgs/pincrediball/projects/1/views/1) will show you:\nthe alpha release is super-minimal.\nOnly the very basics are in there, and I'll use a User Test Script of sorts that fills in the gaps.\n\nSo (near) laser-focus on that alpha-release, is what's up next!\n",{"id":112,"isDraft":7,"order":113,"date":114,"title":115,"content":116},"post-2023-03-14",17,["Date","2023-03-14T00:00:00.000Z"],"Day 30: Work In Progress","## Day 30: Work In Progress\n\n**_Jeroen_, March 14, 2023**\n\n[Yesterday](#post-2023-03-13) I started the day with a devlog.\nIt outlined the goals and plan for this current stretch.\nSince the end of yesterday you can now publicly track progress [on the GitHub Kanban Board](https://github.com/orgs/pincrediball/projects/1/views/1).\n\nToday I'm building the foundations of the final codebase, using `prototype-007` as a reference point.\nWhich involves a ton of struggling with Godot's haphazard UI layout features.\nSo there's little time for an extended devlog.\nThese few paragraphs will have to do, dear reader!\n\nCatch you tomorrow!\nI'm off to get a wee bit more productivity out of today.\n",{"id":118,"isDraft":7,"order":119,"date":120,"title":121,"content":122},"post-2023-03-13",18,["Date","2023-03-13T00:00:00.000Z"],"Day 29: Planning","## Day 29: Planning\n\n**_Jeroen_, March 13, 2023**\n\n> But Jeroen, isn't halfway into the project a bit late to create a plan!?\n\nWhy yes, it would be!\nBut: I already _had_ a plan, just not fully written down.\nAnd now that the end of my mini-sabbatical is nearing, and the plan is becoming fuzzy, it's time to revise it.\n\nToday I'm writing a devlog _fully_ at the _start_ of the day.\nAs I write, I'll create a plan for the remainder of the project.\nAfter that, I'll commit the rest of the day to taking the first steps.\n\n### Original plan\n\nSo, \"what was the 'original' not-written-down plan then?\", you may ask.\nWell, let's start with what I _did_ [write down at the start](#post-2023-02-16):\n\n[![early plans and brainstorm notes](/img/v2023-02-14a-tipm-design-and-brainstorm.png)](/img/v2023-02-14a-tipm-design-and-brainstorm.png)\n\nNote that the (respectively) pink and red highlighted items I considered most important.\nSo the plan was to:\n\n1. **Pick a name**, build a website + blog\n2. **Design and prototype** something, create primary sprites\n3. Set up something **temporary for sound and music**\n4. Create a **fun inner game loop**\n5. Learn the **game engine** needed for this\n6. Beta test it, **make sure it's _fun_** to play\n7. **Publish** and release to friends and family\n\nThe inner game loop would be:\n\n1. **Drag components around** to \"design\" a machine\n2. **Run the playbook** to see how it plays out\n\nThe secondary game loop:\n\n1. **Run the _inner_ game loop**\n2. **Check your score** and the medals you got\n3. **Unhappy**? Rinse and repeat. **Happy**? Go to next level.\n\nThe important thing is: **all of the above is still roughly relevant!**\nSo creating a fresh plan should be easy, right?!\n\n### Goals\n\nBefore talking about a plan, I need to talk about _goals_.\nLet's start with the _initial_ goals.\nWhen asked before the start, I'd say something like this:\n\n> I develop software for a living.\n> But I've never developed a _game_ before.\n> So I want to try that.\n>\n> The goal would be to create one small game, end to end, nearly every part of it created by myself.\n> And earn at least one euro with it, which can also be my own 1 euro: I just want to see what it takes to getting to _publishing_ a game.\n\nIt's also interesting to now what I did _not_ declare to be my goals:\n\n- That it should be a _good_ game;\n- That it should be a _successful_ game (monetarily or otherwise);\n- That it should be _completely_ finished;\n\nIt's _very_ tough to _not_ care about those things.\nAnd to be honest: I _do_ care about all three (in the order above).\n\nBut those things were _not_ my goals at the start.\nAnd I think that has remained unchanged.\nSo the main goals remain:\n\n- Experience what it's like to _develop_ a game;\n- Publish _something_ and earn at least one euro with it;\n\nKnowing my (unchanged) goals, it's time to create a fresh plan.\n\n### Revised plan\n\n[Prototype 007](https://github.com/pincrediball/prototype-007) after [Day 26](#post-2023-03-10) gives hope.\nIt should be good enough to help achieve above-stated goals.\nSo let's work from there.\nI should make it \"official\" too, and clean up a bit while doing so.\nThe first step should therefore be:\n\n\u003C!-- markdownlint-disable MD029 -->\n\n> 1. Move \"Prototype 007\" work over into the [core Pincrediball game repository](https://github.com/pincrediball/pincrediball).\n>    Setting up a proper and clean project structure as I do so.\n\nAfter that I should basically have Prototype 007, but in a somewhat clean codebase.\nThe next steps would be to get to a playable state where I can ask friends to user test it.\nTo summarize:\n\n> 2. Create a MUTeP: a Minimal User Testable Product.\n>    Something that supports the _inner_ game loop.\n>    Plus (possibly with workarounds) lets you imagine how the secondary game loop would work.\n\nAnd yes, I just made the \"MUTeP\" acronym up.\n\nAfter getting test feedback, things shake up a bit.\nWho knows what testers will tell me?\nAnd what changes they require, affecting the plan.\nRegardless, the next step should be clear:\n\n> 3. Handle feedback.\n>    Fix the most glaring problems _that obstruct the end goals_.\n>    Park all other suggestions and problems for the longer term.\n\nAfter this some extra feedback rounds may continue.\nBut looking at the main goals, the prime path to them has another focus.\nAt this point I should focus on making sure that _I myself_ am happy enough:\n\n> 4. Make it publishable.\n>    Make it good enough that I'm willing and happy (enough) to put it up on the web.\n>    Including enough polish to make it presentable, without polishing forever.\n\nOriginally I thought I'd publish mainly (or even only) on Steam.\nBut I'm changing that a bit.\nI'm aiming to publish an alpha version with disclaimers on Itch.io first.\nAnd I'ld be happy with merely a wish-list page for Steam.\nIn short, the final step for during my mini-sabbatical would be:\n\n> 5. Publish an early-access version.\n>    Can be anywhere, as long as people can pay me an euro for it.\n>    So that I might buy my own game, and accomplish the original goals.\n\nIt _feels_ possible to make these 5 steps in the remaining weeks.\nAnd it would feel great to do so, because I love the dopamine hit from achieving goals I set for myself.\n\nSo there you have it, that's the plan!\n\n\u003C!-- markdownlint-enable MD029 -->\n\n### Beyond the plan\n\nMy aim with the aforementioned plan is to achieve the initial goals.\nThere are goals _beyond_ those.\nThere's two layers of goals:\n\n1. _Complete_ the game and make it _good_ enough for my own tastes.\n   And then also publish it on Steam.\n\n2. Try to make it a _success_.\n   Which includes a ton of marketing and social media work.\n\n3. Go _beyond initial success_.\n   Dreaming big, there could be a version 2 of the game, which would be a proper version.\n   This could include a Kickstarter and/or trying to get extra help on the project.\n\nThese are in chronological order, but also in order of how likely they are to happen.\nThe first one is somewhat likely, as I already sunk the 100 euro's into Steam to be allowed to publish a game.\nBut even that goal I might skip.\n\nThe good news: I don't have to decide at the time of writing this.\nIn fact, **I need to stop writing and start building**.\nOtherwise I won't even be in a position to think about those extended plans.\n\nOff we go!\n\nPS. Track live progress of this plan [on the GitHub Kanban Board](https://github.com/orgs/pincrediball/projects/1/views/1).\n",{"key":124,"posts":125},"2023, week 10",[126,132,138,144,150,156],{"id":127,"isDraft":7,"order":128,"date":129,"title":130,"content":131},"post-2023-03-11",19,["Date","2023-03-11T00:00:00.000Z"],"Day 27: Weekend thoughts","## Day 27: Weekend thoughts\n\n**_Jeroen_, March 11, 2023**\n\nWait what's up!?\nA _weekend_ devlog?\nThat's a first!\n\nLet me explain.\n\nWeek 10 started with an [XXL post on Day 22](#post-2023-03-06).\nI set three strict goals to achieve for the day.\nBut I tend to get distracted by random ideas.\nThings to procrastinate with.\nSo I decided to write them down in a little notepad.\n\nBut a random file somewhere is no great solution.\nSo on [Day 23](#post-2023-03-07) I decided to stash them into this blog post.\nThat means the bulk of all ideas were written down during this week.\nAll ready to go in markdown format.\n\n### Where to leave them?\n\nFirst I figured I'd just finish this blog post with a giant list of ideas.\nBut now that it's time to finish the post, I realize: **ideas change, we _iterate_ on them**.\nSo something less \"permanent\" or \"captured in time\" is needed.\n\nI'm a fan of keeping things in once place as much as possible.\nIt's also nice to do things out in the open a lot, because it feels like commitments then.\nAnd since they're markdown already anyways: **let's stash them into (GitHub) issues**.\n\nHeck, I might even give GitHub's \"projects\" feature another go.\nWho knows?\n\n### What are side-tracks do we have?\n\nSo I don't like making this blog post a permanent exhaustive list of ideas.\nBut what I _can_ do is to show off what I'm starting with.\nThe content is in the git history of this post's markdown anyways.\n\nSo, here's the current list of ideas.\nThey're only the titles now, each linking to where to find them on GitHub:\n\n- **Ideas for Pincrediball.com**\n  - [Change header levels while transforming markdown](https://github.com/pincrediball/pincrediball.com/issues/1)\n  - [Improve Table of Contents (from markdown) generation](https://github.com/pincrediball/pincrediball.com/issues/2)\n  - [Glossary in visual format](https://github.com/pincrediball/pincrediball.com/issues/3)\n  - [Fix spelling mistakes in old blog posts](https://github.com/pincrediball/pincrediball.com/issues/4)\n  - [Add VS Code extension recommendations to repository](https://github.com/pincrediball/pincrediball.com/issues/5)\n  - [Generate individual blog-post pages](https://github.com/pincrediball/pincrediball.com/issues/6)\n- **Game meta stuff**\n  - [Create initial Steam Store page](https://github.com/pincrediball/pincrediball/issues/1)\n  - [Create or reserve initial Itch.io page](https://github.com/pincrediball/pincrediball/issues/2)\n  - [Add some initial YouTube content](https://github.com/pincrediball/pincrediball/issues/3)\n  - [Research other relevant Pinball software and games](https://github.com/pincrediball/pincrediball/issues/4)\n\nAnd that's all the temptations for procrastination I'd written down so far.\n\n### Which core ideas are there?\n\nThoughts and plans for the game itself reside in my head still.\nWe can't link to a GitHub issue then, but we can summarize it in one single to-do:\n\n- **Project planning**.\n  Really, I need to set goals (or accept I'll continue without any).\n  Create some sort of plan or road map, if I feel like it.\n\nThe [labels in GitHub](https://github.com/pincrediball/pincrediball/labels) have been prepared.\nSo week 5 of development should just start with this to-do.\n\n### Anything else?\n\nAnd there's the ideas that are neither procrastination-worthy (at this moment), nor core to the game.\nThey don't deserve a GitHub issue (yet).\nSo let me just dump them here, so they might not haunt my progress.\n\n- **Kickstarter**.\n  Even though I'm skeptical about if or when I'm going to finish Pincrediball, I still like to dream big.\n  If there's a playable alpha version, it might even be possible to create a Kickstarter.\n  Even if only to see how that works.\n- **Chase SvelteHack organizers**.\n  Emailed the organizers of [hack.sveltesociety.dev](https://hack.sveltesociety.dev/) a while ago.\n  I'm really curious if my pincrediball.com site would qualify, since light work on it was started just before the official announcement.\n  Would be good to send another e-mail or something similar, as I haven't had _any_ response at all.\n- **Devlog graphs**.\n  I think it would be cool to show a couple of line graphs, detailing aspects of development.\n  Per day a rating for things like \"happiness\", \"productivity\", \"success\", or possibly others.\n  And now that things are still fresh, I could fill it in for the past few weeks.\n  Then again... this idea is a bit \"out there\", and not relevant at all to actually building the damn game...\n\nAnd that's really it.\nNow my head is empty.\nNo more core ideas, procrastination sidetracks, or out-there thoughts left.\n\nIn short: I'm ready for week 5!\nBring it.\n",{"id":133,"isDraft":7,"order":134,"date":135,"title":136,"content":137},"post-2023-03-10",20,["Date","2023-03-10T00:00:00.000Z"],"Day 26: Drag Game","## Day 26: Drag Game\n\n**_Jeroen_, March 10, 2023**\n\nToday I started like [past Monday](#post-2023-03-06):\nby [publicly stating my goals for the day](https://mastodon.social/@jeroenheijmans/109998383905771802).\nHere's what I'm aiming for today:\n\n> Three goals again today for @pincrediball development:\n>\n> 1. Learn Godot's Drag & Drop system\n> 2. Allow players to move at least _some_ components around\n> 3. Learn about Scene Composition in Godot\n>\n> Plus: leave a little bit of energy to do some work on Saturday.\n> I really need to make some plan for the last few weeks available to finish an alpha version.\n\nSo technically that's _four_ goals, I suppose?\nAlthough also technically I did parts of \"1\" already, as you can tell from [/resources#bookmarks--godot-game-engine](/resources#bookmarks--godot-game-engine).\n\nI will allow myself (at least) one more day to \"muddle around\" in [`prototype-007` code](https://github.com/pincrediball/prototype-007).\nAfter that I really should be thinking about a somewhat clean codebase for the target alpha release of the game.\n\nFor now, let me put down my writing hat, and take a few moments to work through those goals.\n\n_A few ~moments~ hours later..._\n\n### Drag and Drop\n\nWhelp, that wasn't trivial.\nAnd as I feared when I just switched to Godot, them introducing a new major version would provide some hurdles.\nSo [a tiny underscore issue](https://gamedev.stackexchange.com/questions/204808/drag-and-drop-differences-between-godot-3-and-4) cost me a good two hours.\n\nBut, even though a little less polished than I'd like, we do have some results:\n\n\u003Cvideo controls loop style=\"max-width: 530px\">\n  \u003Csource src=\"/img/pincrediball-prototype-007-part3.mp4\" type=\"video/mp4\" />\n  Video recording the Tutorial Pinball Machine, layer for layer appearing\n\u003C/video>\n\nSo with a bare minimum, I think I made my Drag & Drop goals for today.\nIn the process I learned enough about Scenes and composing them to keep me rolling.\n\n### Up Next\n\nI'll call the above state today's check point.\nMaybe I'll do a few small things tonight.\nPossibly I'll do some work on Saturday.\nBut for now...\n\nSigning off!\n",{"id":139,"isDraft":7,"order":140,"date":141,"title":142,"content":143},"post-2023-03-09",21,["Date","2023-03-09T00:00:00.000Z"],"Day 25: Research","## Day 25: Research\n\n**_Jeroen_, March 09, 2023**\n\nDear reader: thank you!\n\nBecause if you're here, despite me not promoting this post, you must be a real fan!\n\n[Yesterday](#post-2023-03-08) led to some very tangible success.\nAs foreshadowed at the end of that post, today will be a shorter day.\nSo I was planning to spend some time on **research, instead of development**.\n\nMy plans include:\n\n- Structuring Research I've already done\n- Organizing my own glossary\n- Researching \"The Competition\" (other Pinball software and games)\n\nLet's get to the results, shall we!?\n\n### Structuring Research\n\nI've already built up a long list of online resources I've used so far.\nHigh time to put this into a better, version controlled format!\n\nThe main part of my saved research consists of... **bookmarks**!\nLet's keep it simple for now, and just integrate the most interesting ones with this website.\nSo without any ado:\n\nFind them all at [pincrediball.com/resources#bookmarks](/resources#bookmarks)!\n\n### Pinball Glossary\n\nIn my research I've found several glossaries for Pinball.\nNone of them summarize things in a way that suit me.\nSo it makes sense to create my own.\n\nSame holds here as for the \"Research\".\nIt makes the most sense (for now) to just add it to the website.\nSo, without any ado:\n\nFind the glossary at [pincrediball.com/resources#glossary](/resources#glossary)!\n\n### Researching \"The Competition\"\n\nIf there _are_ any direct competitors, I might as well check them out.\nMost likely there _will_ be software to create (and possibly also play) Pinball machines, which I also want to check out.\nIf there's time I might check some more general Pinball games.\n\nThis item was _last_ in my list, for good reason.\nIt's super open-ended, and could take hours, but also days or weeks!\n\nIn fact, this goal I've missed for today.\nI'll put it into the (forthcoming) blog post on all sorts of random ideas I still have.\nBut for now: there's not much more to say.\n\n### Summarizing\n\nRight.\nShort days are short.\nShorter even than you'd think.\nAnd I _really_ want to wrap up this post, _before_ I leave for social engagements.\n\nMaybe I'll revisit this post and the linked resources later in the day.\nBut most likely... _this will be it_.\nAnd tomorrow should be another day of actual _development_ work.\n\nUntil then!\n",{"id":145,"isDraft":7,"order":146,"date":147,"title":148,"content":149},"post-2023-03-08",22,["Date","2023-03-08T00:00:00.000Z"],"Day 24: Implementing the Tutorial Machine","## Day 24: Implementing the Tutorial Machine\n\n**_Jeroen_, March 08, 2023**\n\nA strong contender for procrastination of today's original goals came up.\nFrom a friend I got a link to an old semi-competitor to my own game.\nEnough to get me past my original hesitation to research how (un)original my game idea is.\nAnd what I can _learn_ from those other games, of course.\n\nI really _must_ park that, if even for a day.\nAnd focus on the original goals.\nMore precisely specified, let me say out loud that today I aim to:\n\n1. Get at least the _sprites_ in my game for all Tutorial elements;\n2. Get _behavior_ in for round bumpers;\n3. Stretch goal: get behavior in for slings;\n\nI'm gonna \"state my goals publicly\" again.\nThis time I'll do so by pushing relevant commits to GitHub early.\nI could use the method I introduced earlier ([with \"(DRAFT)\" in the title](https://github.com/pincrediball/pincrediball.com/commit/2d1051a9ab69d92104472ea5e7469d9fd2c3a89b#diff-49d919cc2693b0e3ba9a5cca314294b09fde3e8a1787c4f57a7c658b61fc5092)),\nbut today I'll just go with the simpler \"not yet running `npm run build` yet\".\n\nAt this point it is time to get coding!\n\n_A few ~moments~ hours later..._\n\n### Results!\n\nThat went better than expected!\nGot all sprites (except the rails) in the game.\nAlso got _base_ behavior in there for nearly all of them.\n\nHere's a good recording of where it stands right now:\n\n\u003Cvideo controls loop style=\"max-width: 530px\">\n  \u003Csource src=\"/img/pincrediball-prototype-007-part2.mp4\" type=\"video/mp4\" />\n  Video recording the Tutorial Pinball Machine, layer for layer appearing\n\u003C/video>\n\nIt's just insanely fun to watch a \"_multi-multi-multi-ball_\" going.\nReally that has to become part of the final game somehow.\nIf only as a \"victory dance\" after getting the gold medal.\n\nI'm quite excited about these results!\nEven though it becomes more clear that this mini-sabbatical is not long enough to complete my entire idea,\nI am certainly enjoying myself and learning a ton.\nSo I'll happily chug along.\n\n### Next up\n\nTomorrow will be a day with some social engagements.\nSo perfect for some light in-between work.\nPerhaps some research, and a summary on the devlog.\n\nFor continued work on the game and more fancy recordings:\nstay tuned for later in the week!\n",{"id":151,"isDraft":7,"order":152,"date":153,"title":154,"content":155},"post-2023-03-07",23,["Date","2023-03-07T00:00:00.000Z"],"Day 23: Designing the Tutorial Machine","## Day 23: Designing the Tutorial Machine\n\n**_Jeroen_, March 07, 2023**\n\n[Yesterday](#post-2023-03-06) was an \"XXL\" day.\nFinished very late as well.\nSo today I'll go a little easier.\n\n### First half of a blog post\n\nHere's the goal for today:\n\n1. Design a \"finished\" tutorial machine.\n\nThat's it.\nJust one goal for today.\nI'm starting by writing this first half of the blog post.\nTo gather thoughts and set my goals.\nBecause that part did work well, yesterday.\n\nHere's my thoughts on switching back to \"Designing\" for a bit.\n**First up**, I _enjoyed_ doing the designs.\nSo it's easy to stay motivated this way.\n\n**Second**, it will _fixate scope_ for the Pinball Machine components of the Tutorial stage.\nSo it should help me keep things small (enough).\nAnd free up some mental space, once those things are \"on paper\".\n\n**Third**, and most importantly:\nit should help me _flesh out the core game concepts_.\nThe Tutorial machine should \"proof\" that the game loops are _fun_.\nOr it will _disproof_ that, and allow me to pivot if needed.\n\nSo, without further ado, let me get to creating those designs...\n\n..._a few ~moments~ hours later_:\n\n### Second half of a blog post\n\nWe're at the end of the day, and there's _some_ result.\nNot entirely happy yet, but \"good enough\" for now.\n\nDecided to \"work backwards\" with level design.\nFirst I designed _one configuration_ of the tutorial stage that finishes the last level with at least bronze.\nHere's the completed machine, as it's built up from the ground:\n\n\u003Cvideo controls loop style=\"max-width: 530px\">\n  \u003Csource src=\"/img/pincrediball-prototype-007-design-buildup.mp4\" type=\"video/mp4\" />\n  Video recording the Tutorial Pinball Machine, layer for layer appearing\n\u003C/video>\n\nOuter bounds and background artwork will always be visible to the player.\nComponents can be placed nearly anywhere on the field.\nThe artwork is supposed to be a guided tutorial for where things could have a nice placement.\n\nQuests (if ever) can be added to the tutorial by just completing the various goals a set number of time.\nThe center artwork could just light up more firmly for each achieved goal.\nAnd perhaps increase the multiplier for scores by doing so?\n\nNext day(s) I will try to move all these components into Godot.\nProgramming their features as I go along.\nAt some point the entire pinball machine should be \"done\".\nI guess if I add keybindings for the flippers I will have made a basic flipper game?\n\nAfter that I'm planning to add the actual core features:\nplayers can move around components, then run playbooks to achieve high scores.\nI'm sure to run into design troubles at that stage.\n\nBut for now, this result will have to do!\n\n### Summarizing\n\nA limited goal for the day, and that worked out just fine!\nModerately happy with this result, even though I guess all I did was \"_design a mediocre Pinball Machine_\".\nCurious to see if I can _at least_ turn that into a _working_ \"mediocre Pinball game\"...\n",{"id":157,"isDraft":7,"order":158,"date":159,"title":160,"content":161},"post-2023-03-06",24,["Date","2023-03-06T00:00:00.000Z"],"Day 22: Prototype 007 (XXL devlog)","## Day 22: Prototype 007 (XXL devlog)\n\n**_Jeroen_, March 06, 2023**\n\nFresh week, fresh energy.\nStarted the week by [committing \"publicly\" (on Mastodon) to three small goals for today](https://mastodon.social/@jeroenheijmans/109975463331122581):\n\n> 1. Design the tutorial machine with initial art\n> 2. Put the design into Godot\n> 3. Allow plunging a single ball through it\n\nAdditionally (to \"publicly stating goals\") I'm also going to get all other productivity tricks that work for me going.\nOne of which is \"writing my way through it\".\nThat is: **I'm going to rubber duck by writing an _extra long devlog_** to keep me going.\n\n⚠ If you're here for more casual devlogs, **then I recommend to stop reading after his paragraph**.\n\n...\n\nIf you're here for the full stream-of-consciousness, then saddle in! We're about to dive deep.\n\n### 1. Designing the tutorial machine\n\nDesigning Pinball machines is a skill on its own.\nI have no such skill, but I've tried to do a base level of research.\nAmongst others, having checked [several PAPAPinball YouTube \"Machine Tutorials\"](https://www.youtube.com/watch?v=XSw7fK6x1mw&list=PL-WQLGFMr97CQpOQDEvRqAiSqcvSuK11h&index=3)\nI see several aspects of a good Pinball machine:\n\n- **Theme** that's appealing (often tied to an existing brand, like \"Batman\" or \"Jurassic Park\");\n- **Backplate** with artwork around the theme;\n- **Quests**: hitting specific targets in specific orders, in a way that's also fun and challenging;\n- **Toys** are extra-special (often gimicky and theme-related) components of the machine that do something crazy when hit;\n- **Balance** between how hard goals are to hit (and how big a chance you have to drain the ball), and how many points they give;\n- [**Flipper tricks**](https://www.youtube.com/watch?v=r_7TQ6wRZdw&list=PL-WQLGFMr97DnxeE1Rmi-wAwa-Vm7D-7i) should allow skilled players to be better at the game;\n- **Multi-ball** mode is usually a goal to work towards, preferably when **\"multipliers\"** are enabled;\n- **Basic components** that _must_ be included:\n  plunger (with plunger lane and a gate),\n  flippers,\n  balls,\n  lanes,\n  spinners,\n  bumpers,\n  drop targets,\n  slingshots,\n  and rollovers.\n- **Extra components** should probably also be included:\n  backbox and display,\n  outlanes,\n  ramps,\n  gates,\n  and kickbacks.\n- **Skill Shots** (plunging the initial ball at a particular speed to hit a particular target) are perfect for Pincrediball too.\n  Especially in the tutorial levels, the \"Playbook\" could contain a precise skill shot.\n  This makes it super fun to place the initial components in a very precise location.\n\nWe'll start with designing the theme, backplate, and quests.\nOne theme per \"stage\" of the game, so multiple levels are on the same theme.\nThe _Tutorial_ stage is up first.\nAlthough I don't have a good term or word for the theme yet, it'll revolve around:\n\n- Stick figures and a \"math\" paper background;\n- A limited color scheme with shades of blue, and some black and white;\n- Quests to build up a mini-comic lit up on the backplate;\n\nAt this point I'll stop writing out my thoughts on this blog post.\nIt's time to grab a tool to design the initial art!\n\n_...a few ~moments~ hours later_:\n\n[![Pinball machine in progress](/img/pincrediball-prototype-007-figma.png)](/img/pincrediball-prototype-007-figma.png)\n\nThis gives me something to work with!\nInteresting notes about the design:\n\n- The plunger lane includes an amber-colored gate that should be \"one-way\" for the ball;\n- The three gates at the top are for points, and to be placed by the player in the game to create high scores;\n- There's a tiny start for stick-figure art in the main area, which will indicate quest progress;\n- I'm a noob at Figma, yet still made it work decently well!\n\nI want to continue tweaking this design, but I _must_ move on.\nThere's still two goals left for today.\nTime for a quick break, and then on to the next part.\n\n### 2. Putting it into Godot\n\nFor some reason I figured that having SVG's in Figma would make it easy to import everything into Godot.\nI was half right.\nThe _wrong_ half.\n\nImporting the \"Art\" as textures was very easy.\n\nBut the important half was not so easy; perhaps more research is needed?\nI was hoping the SVG paths would be useful as collision shapes.\nEspecially the bezier curves seemed logical for a pinball machine.\nI set myself certain goals for today, and getting this bit perfect would hold me back.\n\nSo, I went the labor-intensive route.\nImporting the design of the machine in chunks from Figma.\nAnd after that... _manually tracing over those shapes again_, to create the collision polygons.\nSo...\n\n_...a few ~moments~ hours later_:\n\n[![Pinball machine in progress](/img/pincrediball-prototype-007-godot.png)](/img/pincrediball-prototype-007-godot.png)\n\nThat at least should work to some degree!\nLet's have a look, shall we?\n\n### 3. Allow plunging a ball\n\nTime to program a little bit of interactivity.\nThe plan was as follows:\n\n- A \"Plunge\" button that spawns a ball and shoots it into the field;\n- **Bonus:** Flippers that just constantly, well, flipper;\n\nAfter a bunch of trial and error;\nafter a ton of Godot 3.x to 4.0 translation;\nafter loads of debugging and tweaking;\nin short after...\n\n_...a few ~moments~ hours later_:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-prototype-007.mp4\" type=\"video/mp4\" />\n  Video recording of a basic pinball machine and dozens of balls\n\u003C/video>\n\nI have a ton of concerns still.\nMost notably if this will be deterministic enough for my core game idea.\nBut concerns be damned, **I'm pretty content with this result!**\n\n### Recap\n\nIn short, I achieved what I set out to do:\n(1) design a machine, (2) put it in Godot, and (3) have basic ball physics.\nSetting the goals at the start certainly helped.\nTomorrow I might go for a more free-form day, but soon after I'll certainly use this same trick again.\n\nIf you made it this far into my stream-of-consciousness post:\nI salute you!\nYou're the best.\n\nOn to the next bits!\n",{"key":163,"posts":164},"2023, week 9",[165,171,177,183,189],{"id":166,"isDraft":7,"order":167,"date":168,"title":169,"content":170},"post-2023-03-03",25,["Date","2023-03-03T00:00:00.000Z"],"Day 19: Rest day","## Day 19: Rest day\n\n**_Jeroen_, March 03, 2023**\n\nGot up an hour later than I wanted.\nEnjoyed a visit from a friend, preferred chatting over working on the project.\nSome spinning while watching Rick & Morty.\nAnd some LEGO Star War with the Mrs.\n\nIn short: not much game dev was done today.\n\nPerhaps I'll catch up over the weekend.\nOr maybe I'll just reboot next week.\nI'm fine with either, it's a _vacation_ project, after all.\nWe'll see!\n",{"id":172,"isDraft":7,"order":173,"date":174,"title":175,"content":176},"post-2023-03-02",26,["Date","2023-03-02T00:00:00.000Z"],"Day 18: Prototype 006 with Godot","## Day 18: Prototype 006 with Godot\n\n**_Jeroen_, March 02, 2023**\n\nToday I followed advice from friends.\nGodot got several more recommendations.\nAnd right after I decided to take it for a spin, [Godot 4.0 was released](https://godotengine.org/article/godot-4-0-sets-sail/).\n\n> After 3+ years of breaking and rebuilding from the ground up, a complete core overhaul and a full engine rewrite: **Welcome to the start of Godot 4!**\n\nSo that's both good and bad.\nIt's nice that I join in right when a boost in new modern features is released.\n\nBut as I suspected, it's less nice that we're now in a state of limbo.\nDocumentation has warnings all over the place that they might still be out of date.\nOnline examples are thoroughly broken.\nAll forum posts and Q&A online still uses the 3.x way of things.\n\nBut if I download the 3.x LTS version, I'm learning obsolete skills from the get go.\nSo Godot 4.0 it was.\n\n### Prototype? Mini-game!\n\nI named it \"prototype 006\" and might still put the code online as such.\nBut I mainly set out to just build a tiny game with Godot.\n\nAs a teenager I'd lie on my back in my room, endlessly tossing a small ball in the air.\nThe goal?\nTo get as close to the ceiling as possible, _without_ actually hitting it.\n\nSo I made it into a tiny Godot game.\nReally wanted to make it playable in the browser, more on that in a second.\nFirst, an example of what it looks like:\n\n[![Animated gif of a ball bouncing in the air for score](/img/pincrediball-prototype-006.gif)](/img/pincrediball-prototype-006.gif)\n\nYou press `[SPACE]` or `[LEFT MOUSE BUTTON]` for 0 to 2000 milliseconds to send it flying up.\nThe higher you get, the more points you score.\nIf you hit the ceiling?\nZero points.\n\nActually fun to build.\nMostly without frustration.\nBetter than Phaser, certainly.\nThis is looking promising!\n\n### Godot exports\n\nThe actual exporting to platforms is a bit more finnicky.\nAndroid requires the SDK so I'm yet to try that.\niOS similarly likely needs special stuff.\n\nThe `.exe` Windows version was somehwat easy.\nIt includes the entire Godot engine though.\nSo my super-simple game becomes 45+ MB: not great.\n\nThe \"html5\" version is even worse.\nThe WASM file also clocks in at similar size.\nBut worse: it requires quite modern but certainly not ubiquitous Web Server headers.\nThe response from the Godot team was, understandably but frustratingly:\n[\"This is a Web Server problem that Web Servers should fix\"](https://github.com/godotengine/godot/issues/69020#issuecomment-1324253401).\n\nIt seems that [support for needed headers](https://stackoverflow.com/q/68609682/419956) won't easily work on GitHub Pages.\nSo no runnable version of the game on this devlog for now.\n\n### Now what?\n\nIt'd be really sad if my final game wouldn't run well in browsers.\nBoth a demo version on the website, as well as an itch.io version, would be problematic.\nBut I don't think I'll let that hold me back.\nTomorrow I'll sleep in, and at some point go back to toying with Godot.\nMainly because it was _fun_ to do so!\n",{"id":178,"isDraft":7,"order":179,"date":180,"title":181,"content":182},"post-2023-03-01",27,["Date","2023-03-01T00:00:00.000Z"],"Day 17: Giving up","## Day 17: Giving up\n\n**_Jeroen_, March 01, 2023**\n\nI'm giving up.\n\nThe past few days have been extremely frustrating.\nI'm spending _days_ on trivial things like [making objects only movable by a player](https://gamedev.stackexchange.com/questions/204691/how-to-make-object-movable-only-by-the-player).\nIn those days I'm also loosing _hours_ on how utterly inconsistent and unpredictable the Phaser and Matter API are for nontrivial things.\n\nSummarizing those two things differently:\n\n1. Core Pincrediball concepts are nontrivial in Phaser's physics engine;\n2. Phaser itself and its engine are frustrating to work with so far;\n\nSo I'm giving up.\nOn my current approach.\n\n### What now then?\n\nWell, I need to mentally reset.\nSo tomorrow I'll start with a completely fresh approach.\nNot sure which yet.\n\nTo end this day with a brainstorm of a few possible roads to take:\n\n- **Stick with Phaser and MatterJS?**\n  Still try to stay with Phaser, revitalize, and try to make Matter physics work for me?\n  Probably I should know better, given how frustrated I am right now.\n- **Stick with Phaser and a new Physics engine?**\n  Stay with Phaser, but see if there's a way to get **Box2D** to work with it?\n  I found [the Pinball(!) example](http://phaser.io/examples/v2/box2d/pinball) but it was for the years old version 2 of Phaser.\n- **Try out Godot, or Unity?**\n  The main alternatives I'd consider (next to very maybe GameMaker).\n  I'm just super-worried that I first need a few weeks to learn them.\n- **Rolling my own engine?**\n  This seemed like a bad idea [after day 10](#post-2023-02-22).\n  But perhaps I should give it another go?\n- **Quit building, start (more) procrastination?**\n  To be honest, I've been enjoying everything _except_ building the damn game a lot.\n  The website, the socials, the designs, the (not-yet-existent) Kickstarter...\n  Perhaps I should embrace those first?\n- **Quit altogether?**\n  I have 4 out of 8 weeks left in my mini-sabbatical.\n  There's plenty of things to do in those weeks, other than building a game.\n\nAnd surely there are more options.\nI'll sleep on it, and decide when I'm fresh at it again.\nIt's not very likely that I'll \"Quit altogether\", but I'm keeping options open:\nfirst and foremost I want to be having fun.\nAnd, surprise: all through abovementioned frustration, I'm still having fun!\n\nBut for now, I need a break.\n",{"id":184,"isDraft":7,"order":185,"date":186,"title":187,"content":188},"post-2023-02-28",28,["Date","2023-02-28T00:00:00.000Z"],"Day 16: Putting it all together","## Day 16: Putting it all together\n\n**_Jeroen_, February 28, 2023**\n\nSecond day of week 3, and although I _am_ pushing myself through _some_ relevant work, I'm not making the progress I wanted.\n\nHeck, I'm even writing this recap at the start of day 16.\nSo I'm keeping it short, so I can try once more to get some work in.\n\nWhat I did yesterday is to commit on a setup.\nI did not name my repository for the day `prototype-...`.\nNo, I actually started the main game repository.\nAnd I merged the best bits from earlier prototype.\n\nThat means the day after this one, there are really no excuses left.\nWork has to be done on the game.\nLet's get cracking!\n\nPS. When I procrastinate I try to\nwatch [great Phaser tutorials](https://www.youtube.com/@ourcadetv)\nor [Real Life Pinball Machine Tutorials](https://www.youtube.com/watch?v=7ZMPyTqiot4)\n(yes, that's a thing...). You might enjoy those too?\n",{"id":190,"isDraft":7,"order":191,"date":192,"title":193,"content":194},"post-2023-02-27",29,["Date","2023-02-27T00:00:00.000Z"],"Day 15: Prototype 005","## Day 15: Prototype 005\n\n**_Jeroen_, February 27, 2023**\n\nFirst day of week 3 of the project, day 15 of the project.\n\nI'm writing an early devlog today.\nAfter writing this I will probably _continue_ development.\nBut I feel like I reached a checkpoint _now_, so a recap is in order.\n\n### Prototype 004\n\nLooking at the overview of posts you may wonder: \"What happened to prototype 004?\".\nGlad you asked!\nIn fact, on [Day 12](#post-2023-02-24) I combined Phaser with Svelte;\nonly at the end of that day did I \"promote\" it to [its own prototype repository](https://github.com/orgs/pincrediball/repositories?q=prototype).\nQuite likely `prototype-004` will even grow into the end result at some point.\n\n### Ladies and Gentlemen: Prototype Number 005!\n\nSo, today I got up fresh and early.\nThe main problem to tackle: **some (more) determinism** in runs.\nOtherwise the core game loop (precisely placing parts so you get a high score) is no fun.\n\nDeterminism turns out to be quite difficult with MatterJS.\nBut that's only one problem.\nIt has no Continuous Collision Detection (CCD) either, causing the ball at high velocity to go _through_ walls.\nThis might get worse once I get to implementing flippers, I suspect.\nSo I was doubting my engine choice a bit.\n\nStill, after a productive morning, I found that things might be good enough for now.\nI tweaked the engine settings to a point where many parallel instances of my game would all give the same result.\nHere's [the \"proof\" of that](https://github.com/pincrediball/prototype-005):\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-prototype-005.mp4\" type=\"video/mp4\" />\n  Video recording of an extremely crude demo pinball machine.\n\u003C/video>\n\nThis prototype made two things clear to me:\n\n- It gives enough _confidence_ to move forward with my current setup;\n- It causes enough _doubt_ that this engine should be the final choice for a _full_ game;\n\nIn short: a nice check point reached!\n\n### What's next?\n\nSo the next steps are to go \"all in\" on the current approach.\nMore specifically, my to do list is currently:\n\n- Design a good looking tutorial theme and pinball machine;\n- Integrate that design, Prototype 004, and Prototype nr. 5;\n- Allow the player to move bumpers around\n- Add flippers to the game;\n\nPerhaps a few sound effects to make working on this project a bit more fun too.\nI will roll up the rest of today's work in the next devlog entry either way.\nStay tuned!\n",{"key":196,"posts":197},"2023, week 8",[198,204,210,216,222],{"id":199,"isDraft":7,"order":200,"date":201,"title":202,"content":203},"post-2023-02-24",30,["Date","2023-02-24T00:00:00.000Z"],"Day 12: Combining Phaser and Svelte","## Day 12: Combining Phaser and Svelte\n\n**_Jeroen_, February 24, 2023**\n\nI'm back to integrating PhaserJS with the MatterJS physics engine, and Svelte.\nThe fourth prototype uses some of the domain entities from prototype-003.\nAnd it includes a Phaser scene for the actual Pinball machine.\n\nFor lack of time (the weekend calls for other obligations) I'll just use a static screenshot for the blog:\n\n[![Game in a browser window](/img/pincrediball-prototype-004-part1.png)](/img/pincrediball-prototype-004-part1.png)\n\nThe rest of today was spent on trying to make Matter more deterministic.\nAnd in that process I got (again) a bit side tracked with [an energy conservation issue](https://github.com/liabru/matter-js/issues/256#issuecomment-1443680697) with MatterJS.\n\nSo we close off this week with far less results than I'd hoped.\nFor a large part because I procrastinated and let myself get side tracked though.\nWhat all that does mean is that I need to re-evaluate my goals and approach next week.\n\nWhat's super important is that the machine becomes more deterministic.\nThe whole \"automata player\" and game loop idea falls apart if different runs of the automata have different outcomes.\nEither the setup needs to become (more) deterministic, or the game loop has to change.\nOr my goals for the project need to change...\n\nGot a weekend to chew on that though.\n",{"id":205,"isDraft":7,"order":206,"date":207,"title":208,"content":209},"post-2023-02-23",31,["Date","2023-02-23T00:00:00.000Z"],"Day 11: Sidetracked with Markdown","## Day 11: Sidetracked with Markdown\n\n**_Jeroen_, February 23, 2023**\n\nI let myself get sidetracked...\n\nNot sure how much it is to procrastinate working on the actual game.\nBut I _am_ sure that it sparked joy to play around with something else.\nHere's what I changed up for this pincrediball.com's website source code.\n\n### Prose TailwindCSS plugin\n\nTailwind resets styling, so you can reliably create Web Applications and Sites.\nThat's all great, but for long-form textual content it's actually painful to loose _all_ styling.\n[The Tailwind \"Prose\" plugin](https://tailwindcss.com/docs/typography-plugin) aims to solve that, without compromising the reset of styles that Tailwind gives you.\n\nIt was just fine to write this devlog straight up with html and Tailwind classes.\nBut copy-pasting things like `mt-4` on each `\u003Cp>` becomes tedious pretty quickly.\nThe Prose plugin fixes that nicely, and cleaned up my devlog source code considerably.\n\n### Markdown for blogging\n\nThis also enables the next step.\nMarkdown is a far nicer format to write blogposts in.\nI had noticed before that [`svelte.dev` uses markdown for their blog](https://github.com/sveltejs/sites/tree/master/sites/svelte.dev/content/blog),\nwhich sparked my interest.\n\nAfter briefly trying the (rather nice!) [svelte-exmarkdown](https://github.com/ssssota/svelte-exmarkdown) library, I decided I needed a bit more control.\nSo I dove a bit deeper into how `svelte.dev` does things.\nAnd that setup is quite nice indeed, as it includes support for SSR and RSS.\n\nSo, I used a (much) simplified variant of that setup.\nAnd: it works like a breeze!\nAdding a blog post can now be as simple as [adding one `.md` file to the repository](https://github.com/pincrediball/pincrediball.com/commit/22f4cb509b4c4fbe3b81eb4089af522c21a14bb5)!\n\n### What's next?\n\nThat's all nice!\nBut what's next?\nShould I ever feel like getting side-tracked again, there's a few things left to tweak:\n\n- RSS feed would be nice;\n- Having `[slug]` based pages might be nice;\n- GitHub Action to `npm run build` would be nice;\n- GitHub Action to deploy GH-Pages should be nice;\n\nBut for now: let's stop procrastination and get back to building the game.\nShall we?\n",{"id":211,"isDraft":7,"order":212,"date":213,"title":214,"content":215},"post-2023-02-22",32,["Date","2023-02-22T00:00:00.000Z"],"Day 10: Prototype 003, part 2","## Day 10: Prototype 003, part 2\n\n**_Jeroen_, February 22, 2023**\n\nWell... that was a disaster!\n\nAs warned by folks around me, and just as I already sortof knew would happen:\n_rolling your own_ (engine) is a bad idea.\nGenerally.\nAnd specifically, too (at least for this case).\n\nAfter a few hours of labor here's where I got:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-prototype-003.mp4\" type=\"video/mp4\" />\n  Video recording of an extremely crude demo pinball machine.\n\u003C/video>\n\nAnd then the mountain of work became visible.\n\nThe smart thing to do?\nEnjoy a few other fun things in my sabbatical, let the project lie down for a bit.\nI'll likely revitalize my enthusiasm for the project and go back to using an existing engine.\nPossibly within this web app that's now set up.\n\nStay tuned for prototype _004_ soon (?).\nI'm calling it an early day, on Day 10.\n",{"id":217,"isDraft":7,"order":218,"date":219,"title":220,"content":221},"post-2023-02-21",33,["Date","2023-02-21T00:00:00.000Z"],"Day 9: Prototype 003, part 1","## Day 9: Prototype 003, part 1\n\n**_Jeroen_, February 21, 2023**\n\nAfter [yesterday](#post-2023-02-20) several friends helped out with some rubber duck debugging.\nGot some great input on Slack and in other places about how I could wrangle the physics engine collisions into submission.\nAnd how much I should probably let go and embrace the chaos of a realistic engine.\n\nHowever, I still changed it up... for prototyping purposes!\n\nUsing PhaserJS and MatterJS might _still_ be the right way to go.\nBut I still wanted to try out how it feels to create a fully custom engine anyways.\n\nAnd while I was at that, I was also curious to see how far I can get with plain html, css, and JavaScript (and no _game_ engine).\nUsing SvelteKit and Tailwind, just for prototyping speed at the moment.\n\nI didn't get very far yet with writing the actual game loop and time ticker.\nBut I did do a bunch of good work on an initial game layout.\nIt's far from polished, but (even though polish might be 80% of the work?!) that's for later.\nHere's the initial results:\n\n[![Game in a browser window](/img/pincrediball-prototype-003-part1a.png)](/img/pincrediball-prototype-003-part1a.png)\n\nObviously, this still needs work.\nBut it's getting somewhere.\nEven if I go the PhaserJS route after all, I might be able to use this setup in conjunction with it.\n\nAnd I'm sorry to say: that's all for today, folks!\n\nAs a final footnote for today's devlog: I also decided to open source the prototypes.\nSo you can fully see me fumbling about.\nWriting all sorts of just-make-it-work code.\nYou can find [all the repositories in the Pincrediball GitHub organization](https://github.com/pincrediball).\nAnd for my most loyal readers (hi mum!), here's a quick peek at it, with just a random screenshot of me hacking about in prototype number three!\n\n[![VSCode showing prototype-003 files](/img/pincrediball-prototype-003-part1b.png)](/img/pincrediball-prototype-003-part1b.png)\n\nPrototype 003 will likely get some more love the coming days.\nStay tuned!\n",{"id":223,"isDraft":7,"order":224,"date":225,"title":226,"content":227},"post-2023-02-20",34,["Date","2023-02-20T00:00:00.000Z"],"Day 8: Prototype 002","## Day 8: Prototype 002\n\n**_Jeroen_, February 20, 2023**\n\nAfter not doing too much during the weekend (days 6 & 7), it's now Monday of week 2 and high time to get back to the project.\nAfter a week of \"meta\" stuff, designing, and a super-light prototype, today was spent on more in-depth prototyping.\n\nI'm very happy with what I _did_, but only moderately so with the _result_.\nHere, have a look for yourself first:\n\n\u003Cvideo controls loop>\n  \u003Csource src=\"/img/pincrediball-prototype-002.mp4\" type=\"video/mp4\" />\n  Video recording of an extremely crude demo pinball machine.\n\u003C/video>\n\n\u003Csmall>(Note that you see the debug boxes and vectors in these prototypes.)\u003C/small>\n\nLet's summarize what I learned during today's experiments, starting with the positives:\n\n- ✅ SvelteKit will be a great \"bearer\" of the game\n- ✅ Using plain html/css/js for parts of the app will likely turn out great\n- ✅ Tailwind enables for fast menu's and other UI\n- ✅ I got _something_ looking like Pinball physics to work\n\nHowever, I have many concerns after today:\n\n- ❌ MatterJS physics is wonky ls going _through_ static bounds or getting stuck\n- ❌ Level editing is cumbersome in (vanilla) Phaser, without any tools\n- ❌ Curved shapes and SVG paths are a _major_ pain to use\n\nI'm not so sure yet where to go from here.\nHave I learned that I need to go back to my original idea?\nBuilding a super-simple physics engine of my own, to make everything far more deterministic and reliable?\nOr should I stick with out-of-the-box physics and just deal with the issues?\n\nPerhaps a night's sleep and some distraction will bring clarity.\n",{"key":229,"posts":230},"2023, week 7",[231,237,243,249,255],{"id":232,"isDraft":7,"order":233,"date":234,"title":235,"content":236},"post-2023-02-17",35,["Date","2023-02-17T00:00:00.000Z"],"Day 5: Prototype 001","## Day 5: Prototype 001\n\n**_Jeroen_, February 17, 2023**\n\nToday was not a very productive day, mostly because I didn't spend too much time on the project.\nStill, got to a very first prototype with a plunger and a ball, plus some physics:\n\n\u003Cvideo controls loop>\n  \u003Csource\n    src=\"/img/pincrediball-prototype-001.webm\"\n    type=\"video/webm; codecs=vp9,vorbis\"\n  />\n  \u003Csource src=\"/img/pincrediball-prototype-001.mp4\" type=\"video/mp4\" />\n  Video recording of an extremely crude demo pinball machine.\n\u003C/video>\n\nIt seems the choice for PhaserJS with the MatterJS physics engine is \"good enough\" for my goals.\nAnd I think I will just leave it to chance that I chose right, instead of heavily investigating other Game Engines.\n\nThat's it for day 5.\nWeekend's up next, we'll see if I continue work, or whether the next update will come on Monday...\n",{"id":238,"isDraft":7,"order":239,"date":240,"title":241,"content":242},"post-2023-02-16",36,["Date","2023-02-16T00:00:00.000Z"],"Day 4: Engine's on!","## Day 4: Engine's on!\n\n**_Jeroen_, February 16, 2023**\n\nToday it's time to figure out an engine to use.\nI'm leaning heavily towards [PhaserJS](https://phaser.io/) (the main alternatives being Godot and Unity),\nbecause it allows me to tap into my existing web development and JavaScript skills.\n\nI'm mostly doing tutorials and reading documentation, so no exciting updates from today for the devlog.\nThat does give me a minute to share my rough \"plan\" I created earlier in the project.\nHere it is:\n\n[![Brainstorm overview divided in 6 sections: Design, Graphics/Art, Sound/Music, Game Loop/Engine, Polish, Publish](/img/v2023-02-14a-tipm-brainstorm.png)](/img/v2023-02-14a-tipm-brainstorm.png)\n\nIt started as a brainstorm, but it became a rough \"plan\".\nEach of the six parts is roughly a time box of one week.\nI'm starting with \"Design\" this week, but currently borrowing a bit from the next goal: \"Game Loop / Engine\".\n\nStuff's color coded too: the red stuff is Must-Haves, yellow Should-Haves, and green the Nice-to-Haves.\n\nWhat do you think?\nToo optimistic?\nProbably.\nBut let's see how far we'll get, shall we?!\n",{"id":244,"isDraft":7,"order":245,"date":246,"title":247,"content":248},"post-2023-02-15",37,["Date","2023-02-15T00:00:00.000Z"],"Day 3: Website first?","## Day 3: Website first?\n\n**_Jeroen_, February 15, 2023**\n\nContinuing from day 2 with a focus on _fun_ activities, I decided to finish up the website.\nThis time I don't think I can claim anymore that it's in the end somehow part of the _critical path_ though?\n\nBut regardless of whether it was _The Right Thing_ to do right now, it _was_ very effective!\nI mean: you're looking at the very result right now.\n\nThe website was built with SvelteKit and TailwindCSS, which was rather efficient because I recently used it for both of my other recent side-projects:\n[Tierdom](https://tierdom.jeroenheijmans.nl) and [vesta.infi.nl](https://vesta.infi.nl).\nBut not before I spent the entire morning learning some more Figma skills to do the entire design first.\n\nI only bought the domain name, used\n[GitHub pages with a custom and apex domain](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages#using-an-apex-domain-for-your-github-pages-site)\nfor hosting the whole thing.\nWhich, after the usual DNS hassle, works quite well!\n\nAll this means three important things:\n\n- I can _comfortably share_ the plans with the world\n- I am _on schedule_ for week 1's plans\n- I have _no excuses left_ to procrastinate prototyping\n\nSo let's end this third day with some initial social media posts and links to this website.\n\n**And tomorrow: we prototype!**\n",{"id":250,"isDraft":7,"order":251,"date":252,"title":253,"content":254},"post-2023-02-14",38,["Date","2023-02-14T00:00:00.000Z"],"Day 2: Now we're getting somewhere!","## Day 2: Now we're getting somewhere!\n\n**_Jeroen_, February 14, 2023**\n\nSecond day I allowed myself to get side-tracked.\nI decided that the best way to keep motivation high was by _doing essential things disguised as non-essential things_.\nBy this I mean I tried to incorporate essential things (work on the designs and game idea) into far less essential things (that were enjoyable to do).\n\nFirst thing I did was to **redo the main game screen's design**.\nFor fun I've shared that on the (current, at the time of writing) [home page](/).\nAfter that I took care of a bunch of other non-essential (but fun!) things:\n\n- ✅ Logo &amp; Banner designed\n- ✅ YouTube channel claimed\n- ✅ Itch.io account claimed\n- ✅ Socials set up\n- ✅ SteamWorks application submitted (and $100 fee paid...)\n\nIt was a _fun_ day with this too, as you can tell from [my related toot](https://mastodon.social/@jeroenheijmans/109865321998439644).\nAnd it really gave me a bunch of inspiration and energy to continue on!\n",{"id":256,"isDraft":7,"order":257,"date":258,"title":259,"content":260},"post-2023-02-13",39,["Date","2023-02-13T00:00:00.000Z"],"Day 1: Gotta start somewhere!","## Day 1: Gotta start somewhere!\n\n**_Jeroen_, February 13, 2023**\n\nFirst day of the week I decided to start the project.\nHowever, the night before we watched the Super Bowl... in the GMT+1 timezone!\nSo was up until 04:30 (that's AM for y'all), naturally this wasn't the most productive day.\n\nBut the most important thing got done: I got _started_ on the project!\nPlus several important things got done nonetheless, as [I wrote on Mastodon](https://mastodon.social/@jeroenheijmans/109859902264743330):\n\n- ✅ Brainstorm done\n- ✅ Rough plan created\n- ✅ Name chosen\n- ✅ Domain bought!\n- ✅ GitHub org and repo's claimed\n- ✅ Social media names claimed\n- ✅ Game loop basics designed\n- ✅ Initial designs\n\nIn the end would call day 1 a success!\n",[5,12,21,27,33,39,45,54,60,66,72,78,84,93,99,105,111,117,126,132,138,144,150,156,165,171,177,183,189,198,204,210,216,222,231,237,243,249,255]],"uses":{}}]}
